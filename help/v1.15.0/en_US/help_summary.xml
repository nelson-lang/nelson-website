<?xml version="1.0" encoding="UTF-8"?>
<help_summary>
  <main_summary link="./homepage.html"></main_summary>
  <toc>
    <section name="Nelson Documentation" toc_visibility="false">
      <chapter_description>
        <p>Nelson: Scientific Computing Environment Programming Language.</p>
        <p>Nelson is an open-source scientific computing environment designed for numerical analysis, data visualization, and algorithm development.</p>
        <p>Built for performance and ease of use, Nelson provides a comprehensive suite of mathematical functions, advanced data structures, and powerful visualization tools.</p>
        <p>This documentation serves as your complete reference guide to Nelson's built-in functions, module system, and programming capabilities - from basic mathematical operations to advanced computational tasks.</p>
     </chapter_description>
    </section>
    <section name="Overview" link="homepage.html"></section>
    <section name="Summary" link="summary.html"></section>
    <section name="Getting Started" link="getting_started.html"></section>
    <section name="License" link="license.html"></section>
    <section name="Functions manager">
      <chapter_description>
        <p>Functions manager provides tools to manage and interact with Nelson's function search path and function types.</p> 
        <p>It includes commands to add or remove directories from the search path, execute built-in functions, clear built-in functions, evaluate functions, and more.</p> 
        <p>Utilities are available to check for the existence of built-in, macro, or mex functions.</p>
    </chapter_description>
      <keyword name="addpath" link="./functions_manager/addpath.html" description="Add directories to functions search path."></keyword>
      <keyword name="builtin" link="./functions_manager/builtin.html" description="Executes built-in function."></keyword>
      <keyword name="clearfun" link="./functions_manager/clearfun.html" description="Clear an built-in function."></keyword>
      <keyword name="feval" link="./functions_manager/feval.html" description="Evaluates function."></keyword>
      <keyword name="inmem" link="./functions_manager/inmem.html" description="Names of functions, MEX-files."></keyword>
      <keyword name="isbuiltin" link="./functions_manager/isbuiltin.html" description="Check for the existence of a builtin."></keyword>
      <keyword name="ismacro" link="./functions_manager/ismacro.html" description="Check for the existence of a macro (function)."></keyword>
      <keyword name="ismex" link="./functions_manager/ismex.html" description="Check for the existence of a mex function."></keyword>
      <keyword name="macroargs" link="./functions_manager/macroargs.html" description="Returns variables names of a function."></keyword>
      <keyword name="path" link="./functions_manager/path.html" description="Modify or display Nelson’s load path."></keyword>
      <keyword name="private functions" link="./functions_manager/private_functions.html" description="Private functions."></keyword>
      <keyword name="rehash" link="./functions_manager/rehash.html" description="Reinitialize Nelson’s search path directory cache."></keyword>
      <keyword name="restoredefaultpath" link="./functions_manager/restoredefaultpath.html" description="Restore Nelson’s path to its initial state at startup."></keyword>
      <keyword name="rmpath" link="./functions_manager/rmpath.html" description="Remove directory from search path."></keyword>
      <keyword name="userpath" link="./functions_manager/userpath.html" description="Displays or modify default user functions directory."></keyword>
      <keyword name="what" link="./functions_manager/what.html" description="Get Nelson builtin and macro list."></keyword>
      <keyword name="which" link="./functions_manager/which.html" description="Locates functions and built-in."></keyword>
    </section>
    <section name="Modules manager">
      <chapter_description>
        <p>The Modules Manager in Nelson provides the infrastructure to extend and manage the environment at runtime.</p>
        <p>It allows modules to be dynamically added, removed, and queried, making the system flexible and adaptable to different workflows.</p> 
        <p>With support for both internal and external modules, the manager handles module metadata, paths, and versioning.</p>
        <p>It also provides utilities for organizing user-defined toolboxes, managing gateways, and ensuring that dependencies are properly loaded.</p> 
        <p>This framework simplifies module distribution, integration, and maintenance, forming the backbone of Nelson’s modular architecture.</p>
    </chapter_description>
      <keyword name="addgateway" link="./modules_manager/addgateway.html" description="Adds dynamically builtin at runtime."></keyword>
      <keyword name="addmodule" link="./modules_manager/addmodule.html" description="Add module to Nelson."></keyword>
      <keyword name="gatewayinfo" link="./modules_manager/gatewayinfo.html" description="Returns information about an gateway."></keyword>
      <keyword name="getmodules" link="./modules_manager/getmodules.html" description="Returns list of modules loaded in Nelson."></keyword>
      <keyword name="ismodule" link="./modules_manager/ismodule.html" description="Checks if a module is loaded."></keyword>
      <keyword name="module.json" link="./modules_manager/module-json.html" description="module.json description"></keyword>
      <keyword name="modulepath" link="./modules_manager/modulepath.html" description="Returns path of a module."></keyword>
      <keyword name="nmm" link="./modules_manager/nmm.html" description="Nelson Modules Manager."></keyword>
      <keyword name="nmm_build_help" link="./modules_manager/nmm_build_help.html" description="helper's function to build help of an external module"></keyword>
      <keyword name="nmm_build_loader" link="./modules_manager/nmm_build_loader.html" description="helper's function to build main loader.m of an external module"></keyword>
      <keyword name="removegateway" link="./modules_manager/removegateway.html" description="Removes dynamically builtin at runtime."></keyword>
      <keyword name="removemodule" link="./modules_manager/removemodule.html" description="remove a module from Nelson."></keyword>
      <keyword name="requiremodule" link="./modules_manager/requiremodule.html" description="Returns an error if module is not loaded in Nelson."></keyword>
      <keyword name="semver" link="./modules_manager/semver.html" description="semantic versioner."></keyword>
      <keyword name="toolboxdir" link="./modules_manager/toolboxdir.html" description="Returns path of a module."></keyword>
      <keyword name="usermodulesdir" link="./modules_manager/usermodulesdir.html" description="Returns path where external modules are saved."></keyword>
    </section>
    <section name="Core">
      <chapter_description>
        <p>The Core module provides the fundamental building blocks of the Nelson environment.</p>
        <p>It includes essential services for program execution, environment management, and system interaction.</p>
        <p>Through this module, users can evaluate code dynamically, manage execution flow, query program state, and access key system information such as versioning, configuration, and licensing.</p>
        <p>It also offers basic utilities for file identification, checksums, and terminal capabilities.</p>
        <p>Together, these features form the foundation upon which all other modules and user-level functionality in Nelson are built.</p>
    </chapter_description>
      <keyword name="banner" link="./core/banner.html" description="Shows Nelson banner."></keyword>
      <keyword name="crc32" link="./core/crc32.html" description="Get crc32 checksum."></keyword>
      <keyword name="eval" link="./core/eval.html" description="Evaluate Nelson code in string."></keyword>
      <keyword name="evalc" link="./core/evalc.html" description="Evaluate Nelson code with console capture."></keyword>
      <keyword name="evalin" link="./core/evalin.html" description="Evaluate Nelson code in string in an specified scope."></keyword>
      <keyword name="execstr" link="./core/execstr.html" description="Execute Nelson code in strings."></keyword>
      <keyword name="exist" link="./core/exist.html" description="Check for the existence."></keyword>
      <keyword name="exit" link="./core/exit.html" description="Terminate Nelson program (same as quit)"></keyword>
      <keyword name="feature" link="./core/feature.html" description="undocumented features."></keyword>
      <keyword name="inputname" link="./core/inputname.html" description="Get variable name of function input."></keyword>
      <keyword name="isunicodesupported" link="./core/isunicodesupported.html" description="Detect whether the current terminal supports Unicode."></keyword>
      <keyword name="license" link="./core/license.html" description="Get license information for Nelson."></keyword>
      <keyword name="maxNumCompThreads" link="./core/maxNumCompThreads.html" description="Set/Get maximum number of computional threads."></keyword>
      <keyword name="namelengthmax" link="./core/namelengthmax.html" description="Return the maximum variable name length."></keyword>
      <keyword name="nargin" link="./core/nargin.html" description="Returns the number of input arguments."></keyword>
      <keyword name="narginchk" link="./core/narginchk.html" description="Checks the number of input arguments."></keyword>
      <keyword name="nargout" link="./core/nargout.html" description="Returns the number of output arguments."></keyword>
      <keyword name="nargoutchk" link="./core/nargoutchk.html" description="Checks the number of output arguments."></keyword>
      <keyword name="nelsonappid" link="./core/nelsonappid.html" description="Returns nelson application ID"></keyword>
      <keyword name="nelsonroot" link="./core/nelsonroot.html" description="Returns Nelson's root folder."></keyword>
      <keyword name="nfilename" link="./core/nfilename.html" description="Returns the name of the currently executing file."></keyword>
      <keyword name="mfilename" link="./core/nfilename.html" description="Returns the name of the currently executing file."></keyword>
      <keyword name="pause " link="./core/pause.html" description="Pauses script execution."></keyword>
      <keyword name="prefdir" link="./core/prefdir.html" description="Return the preferences directory used by Nelson."></keyword>
      <keyword name="quit" link="./core/quit.html" description="Terminate Nelson application"></keyword>
      <keyword name="run" link="./core/run.html" description="Executes a script file (.m)."></keyword>
      <keyword name="sha256" link="./core/sha256.html" description="Get sha256 checksum."></keyword>
      <keyword name="version" link="./core/version.html" description="Return the version of Nelson."></keyword>
    </section>
    <section name="Engine">
      <chapter_description>
        <p>The Engine module manages the execution environment of Nelson itself.</p>
        <p>It provides mechanisms to handle program startup and shutdown behavior, command-line integration, and runtime modes.</p>
        <p>This includes support for user-defined initialization and termination scripts, platform-specific system requirements, and interpreter directives for cross-platform script execution.</p>
        <p>It serves as the core interface between Nelson and the underlying operating system, ensuring flexible configuration and smooth control over how the software is launched and operated.</p>
    </chapter_description>
      <keyword name="argv" link="./engine/argv.html" description="Nelson command line arguments."></keyword>
      <keyword name="executable" link="./engine/executable.html" description="Executables to start Nelson software."></keyword>
      <keyword name="finish" link="./engine/finish.html" description="User-defined termination script for Nelson."></keyword>
      <keyword name="getnelsonmode" link="./engine/getnelsonmode.html" description="Returns current Nelson mode."></keyword>
      <keyword name="isquietmode" link="./engine/isquietmode.html" description="Return true if Nelson started with --quiet option."></keyword>
      <keyword name="System Requirements" link="./engine/nelson_system_requirement.html" description="System Requirements by platforms."></keyword>
      <keyword name="#! shebang" link="./engine/shebang.html" description="On Unix, Linux operating systems, Parses the rest of the script's initial line as an interpreter directive."></keyword>
      <keyword name="startup" link="./engine/startup.html" description="User-defined startup script for Nelson."></keyword>
    </section>
    <section name="Interpreter functions">
      <chapter_description>
     <p>The Interpreter Functions module provides the core language constructs and control mechanisms that define the execution flow in Nelson.</p>
     <p>It includes essential elements such as loops, conditional branching, error handling, and function declarations.</p>
     <p>The module also offers tools for parsing code, working with keywords, and managing recursion limits.</p>
     <p>Together, these features establish the fundamental syntax and semantics of the Nelson language, enabling users to write structured, dynamic, and reliable programs.</p>
    </chapter_description>
      <keyword name="abort" link="./interpreter/abort.html" description="stop evaluation."></keyword>
      <keyword name="return" link="./interpreter/abort.html" description="stop evaluation."></keyword>
      <keyword name="break" link="./interpreter/break.html" description="exit evaluation loop."></keyword>
      <keyword name="continue" link="./interpreter/continue.html" description="continue evaluation in loop."></keyword>
      <keyword name="for" link="./interpreter/for.html" description="for loop."></keyword>
      <keyword name="parfor" link="./interpreter/for.html" description="for loop."></keyword>
      <keyword name="function" link="./interpreter/function.html" description="function declaration."></keyword>
      <keyword name="endfunction" link="./interpreter/function.html" description="function declaration."></keyword>
      <keyword name="if" link="./interpreter/if.html" description="conditional statement."></keyword>
      <keyword name="iskeyword" link="./interpreter/iskeyword.html" description="Returns all Nelson keywords."></keyword>
      <keyword name="keyboard" link="./interpreter/keyboard.html" description="Stops script execution and enter in debug mode."></keyword>
      <keyword name="max_recursion_depth" link="./interpreter/max_recursion_depth.html" description=" Internal limit on the number of times a function may be called recursively."></keyword>
      <keyword name="numeric types" link="./interpreter/numeric_types.html" description="About integer and floating-point data."></keyword>
      <keyword name="parsefile" link="./interpreter/parsefile.html" description="Parse a Nelson file."></keyword>
      <keyword name="parsestring" link="./interpreter/parsestring.html" description="Parse a string."></keyword>
      <keyword name="switch" link="./interpreter/switch.html" description="switch statement."></keyword>
      <keyword name="try" link="./interpreter/try.html" description="try/catch statement."></keyword>
      <keyword name="catch" link="./interpreter/try.html" description="try/catch statement."></keyword>
      <keyword name="while" link="./interpreter/while.html" description="while loop."></keyword>
    </section>
    <section name="Error manager">
      <chapter_description>
        <p>The Error Manager module provides the mechanisms for handling errors and warnings in Nelson.</p>
        <p>It defines how exceptions are created, raised, and rethrown, as well as how diagnostic information can be retrieved after an error or warning occurs.</p>
        <p>This module ensures that users can manage execution flow in the presence of failures, capture meaningful error reports, and display warnings without interrupting program execution.</p>
        <p>It forms the foundation for robust error handling and debugging in Nelson applications.</p>
    </chapter_description>
      <keyword name="MException" link="./error_manager/MException.html" description="Matrix Exception information."></keyword>
      <keyword name="error" link="./error_manager/error.html" description="Raise an error message."></keyword>
      <keyword name="getLastReport" link="./error_manager/getLastReport.html" description="Returns last recorded formatted error message."></keyword>
      <keyword name="lasterror" link="./error_manager/lasterror.html" description="Returns last recorded error message."></keyword>
      <keyword name="lastwarn" link="./error_manager/lastwarn.html" description="Returns last recorded warning message."></keyword>
      <keyword name="rethrow" link="./error_manager/rethrow.html" description="rethrow error."></keyword>
      <keyword name="throw" link="./error_manager/throw.html" description="throw error."></keyword>
      <keyword name="throwAsCaller" link="./error_manager/throwAsCaller.html" description="Throw exception as if occurs within calling function."></keyword>
      <keyword name="warning" link="./error_manager/warning.html" description="Display a warning message."></keyword>
    </section>
    <section name="Console">
      <chapter_description>
        <p>The Console module manages interaction with Nelson’s command window.</p>
        <p>It provides tools to control the display, handle user input, and query terminal properties.</p>
        <p>These features allow scripts and applications to communicate directly with the user through the console, making it easier to build interactive workflows and adapt output to the current terminal environment.</p>
    </chapter_description>
      <keyword name="clc" link="./console/clc.html" description="Clear Command Window."></keyword>
      <keyword name="input" link="./console/input.html" description="Display prompt and wait for user input."></keyword>
      <keyword name="terminal_size" link="./console/terminal_size.html" description="Query the size of the terminal window."></keyword>
    </section>
    <section name="Display format">
      <chapter_description>
		<p>The Display Format module defines how values, variables, and expressions are presented in Nelson.</p>
		<p>It offers control over numeric formatting, text representation, and the way results are shown in the console.</p>
		<p>The module also provides mechanisms for capturing formatted output programmatically, enabling both human-readable display and programmatic handling of results.</p>
		<p>This ensures flexibility in how information is presented and reused within scripts and applications.</p>
	</chapter_description>
      <keyword name="disp" link="./display_format/disp.html" description="Display a variable."></keyword>
      <keyword name="display" link="./display_format/display.html" description="Show information about variable or result of expression."></keyword>
      <keyword name="echo" link="./display_format/echo.html" description="Controls the echoing during their execution."></keyword>
      <keyword name="format" link="./display_format/format.html" description="Display format and number printing."></keyword>
      <keyword name="formattedDisplayText" link="./display_format/formattedDisplayText.html" description="Capture display output as string."></keyword>
    </section>
    <section name="Characters encoding">
      <chapter_description>
       <p>The Characters Encoding module provides tools for converting between native byte representations and Unicode characters.</p>
       <p>It enables scripts to correctly interpret and manipulate text in various encodings, ensuring compatibility across different platforms and locales.</p>
       <p>The module also includes functionality for detecting character sets that match a given input, facilitating reliable text processing and internationalization.</p>
    </chapter_description>
      <keyword name="native2unicode" link="./characters_encoding/native2unicode.html" description="Converts bytes representation to unicode characters"></keyword>
      <keyword name="nativecharset" link="./characters_encoding/nativecharset.html" description="Find all charset matches that appear to be consistent with the input"></keyword>
      <keyword name="unicode2native" link="./characters_encoding/unicode2native.html" description="Converts unicode characters representation to bytes"></keyword>
    </section>
    <section name="Localization functions">
      <chapter_description>
    <p>The Localization module manages language settings and internationalization in Nelson.</p>
    <p>It provides mechanisms to query available languages, determine the current and default language, and change the interface language dynamically.</p>
    <p>This module ensures that Nelson can be adapted to different linguistic and regional preferences, supporting a multilingual user experience.</p>
    </chapter_description>
      <keyword name="getavailablelanguages" link="./localization/getavailablelanguages.html" description="Returns available languages in Nelson."></keyword>
      <keyword name="getdefaultlanguage" link="./localization/getdefaultlanguage.html" description="Returns the default language used in Nelson."></keyword>
      <keyword name="getlanguage" link="./localization/getlanguage.html" description="Returns the current language in Nelson."></keyword>
      <keyword name="setlanguage" link="./localization/setlanguage.html" description="Changes the language used in Nelson."></keyword>
    </section>
    <section name="I18n functions">
      <chapter_description>
        <p>The i18n module provides tools for internationalization and localization of text within Nelson.</p>
        <p>It enables retrieval of translated strings for the current locale, supports utilities for managing translation workflows, and facilitates the generation of translation file headers.</p>
        <p>This module helps developers create software that can adapt dynamically to multiple languages and cultural contexts.</p>
    </chapter_description>
      <keyword name="gettext" link="./i18n/gettext.html" description="Get text translated into the current locale."></keyword>
      <keyword name="_" link="./i18n/gettext.html" description="Get text translated into the current locale."></keyword>
      <keyword name="i18nHelpers" link="./i18n/i18nHelpers.html" description="Internationalization (i18n) utility functions"></keyword>
      <keyword name="poheader" link="./i18n/poheader.html" description="Generates po file header."></keyword>
    </section>
    <section name="Types module">
      <chapter_description>
        <p>The Types module provides tools for managing and inspecting data types in Nelson.</p>
        <p>It allows users to query the nature of variables, distinguish between numeric, logical, string, and object types, and work with specialized types such as sparse or integer arrays.</p>
        <p>The module also supports creation of objects and validation of variable names, helping ensure type safety and consistency across scripts and functions.</p>
    </chapter_description>
      <keyword name="class" link="./types/class.html" description="Return classname of object or creates a named object."></keyword>
      <keyword name="isa" link="./types/isa.html" description="Return true if var is an object from the class str."></keyword>
      <keyword name="iscell" link="./types/iscell.html" description="Return true if variable var is a cell array."></keyword>
      <keyword name="ischar" link="./types/ischar.html" description="Return true if variable var is a char array."></keyword>
      <keyword name="isclass" link="./types/isclass.html" description="Return true if variable var is a class object."></keyword>
      <keyword name="isdouble" link="./types/isdouble.html" description="Return true if variable var is a double matrix."></keyword>
      <keyword name="isempty" link="./types/isempty.html" description="Return true if variable var is an empty matrix."></keyword>
      <keyword name="isfloat" link="./types/isfloat.html" description="Return true if variable var is a single or double matrix."></keyword>
      <keyword name="ishandle" link="./types/ishandle.html" description="Return true if variable var is a handle object."></keyword>
      <keyword name="isint16" link="./types/isint16.html" description="Return true if variable var is a signed 16-bit integer type array."></keyword>
      <keyword name="isint32" link="./types/isint32.html" description="Return true if variable var is a signed 32-bit integer type array."></keyword>
      <keyword name="isint64" link="./types/isint64.html" description="Return true if variable var is a signed 64-bit integer type array."></keyword>
      <keyword name="isint8" link="./types/isint8.html" description="Return true if variable var is a signed 8-bit integer type array."></keyword>
      <keyword name="isinteger" link="./types/isinteger.html" description="Return true if variable var is a integer type array."></keyword>
      <keyword name="islogical" link="./types/islogical.html" description="Return true if variable var is a logical."></keyword>
      <keyword name="isnumeric" link="./types/isnumeric.html" description="Return true if variable var is a numeric array."></keyword>
      <keyword name="isobject" link="./types/isobject.html" description="Return true if variable var is an object."></keyword>
      <keyword name="isreal" link="./types/isreal.html" description="Return true if all imaginary part is a zero array."></keyword>
      <keyword name="issingle" link="./types/issingle.html" description="Return true if variable var is a single matrix."></keyword>
      <keyword name="issparse" link="./types/issparse.html" description="Return true if variable var is a sparse array."></keyword>
      <keyword name="isstring" link="./types/isstring.html" description="Return true if variable var is a string array."></keyword>
      <keyword name="isstruct" link="./types/isstruct.html" description="Return true if variable var is a structure."></keyword>
      <keyword name="isuint16" link="./types/isuint16.html" description="Return true if variable var is an unsigned 16-bit integer type array."></keyword>
      <keyword name="isuint32" link="./types/isuint32.html" description="Return true if variable var is an unsigned 32-bit integer type array."></keyword>
      <keyword name="isuint64" link="./types/isuint64.html" description="Return true if variable var is an unsigned 64-bit integer type array."></keyword>
      <keyword name="isuint8" link="./types/isuint8.html" description="Return true if variable var is an unsigned 8-bit integer type array."></keyword>
      <keyword name="isvarname" link="./types/isvarname.html" description="Return true if input is valid variable name."></keyword>
      <keyword name="missing" link="./types/missing.html" description="Return a missing value."></keyword>
    </section>
    <section name="Logical type functions">
      <chapter_description>
        <p>The Logical Type module provides tools for working with Boolean values and logical operations in Nelson.</p>
        <p>It enables the creation, conversion, and manipulation of logical data, supporting fundamental logical operations that are essential for control flow, conditional evaluation, and decision-making in scripts and programs.</p>
    </chapter_description>
      <keyword name="false" link="./logical/false.html" description="Logical false."></keyword>
      <keyword name="logical" link="./logical/logical.html" description="Converts a numeric value to logical type."></keyword>
      <keyword name="true" link="./logical/true.html" description="Logical true."></keyword>
      <keyword name="xor" link="./logical/xor.html" description="Exclusive or."></keyword>
    </section>
    <section name="Single type">
      <chapter_description>
        <p>The Single Type module provides tools for handling single-precision numeric values in Nelson.</p>
        <p>It enables conversion of variables to single-precision format, allowing efficient storage and computation while maintaining sufficient numeric accuracy for many applications.</p>
    </chapter_description>
      <keyword name="single" link="./single/single.html" description="Converts a variable to single precision type."></keyword>
    </section>
    <section name="Double">
      <chapter_description>
		<p>The Double Type module provides tools for handling double-precision numeric values in Nelson.</p>
		<p>It enables conversion to double precision and offers access to key numeric limits, supporting high-accuracy computations and reliable handling of large or small floating-point numbers in mathematical and scientific applications.</p>
	</chapter_description>
      <keyword name="double" link="./double/double.html" description="Converts a variable to double precision type."></keyword>
      <keyword name="flintmax" link="./double/flintmax.html" description="Largest consecutive integer in floating-point format."></keyword>
      <keyword name="realmax" link="./double/realmax.html" description="Largest positive floating-point number."></keyword>
      <keyword name="realmin" link="./double/realmin.html" description="Smallest positive floating-point number."></keyword>
    </section>
    <section name="Integers type">
      <chapter_description>
        <p>The Integer Types module provides tools for working with signed and unsigned integers of various sizes in Nelson.</p>
        <p>These types are particularly useful for efficiently storing and processing large datasets, such as images or large numeric arrays.</p>
        <p>The module supports conversions between integer formats and provides access to the minimum and maximum values representable for each integer type, ensuring safe and precise integer arithmetic.</p>
    </chapter_description>
      <keyword name="int16" link="./integer/int16.html" description="Converts to 16-bit signed integer."></keyword>
      <keyword name="int32" link="./integer/int32.html" description="Converts to 32-bit signed integer."></keyword>
      <keyword name="int64" link="./integer/int64.html" description="Converts to 64-bit signed integer."></keyword>
      <keyword name="int8" link="./integer/int8.html" description="Converts to 8-bit signed integer."></keyword>
      <keyword name="intmax" link="./integer/intmax.html" description="Return the largest integer that can be represented in an integer type."></keyword>
      <keyword name="intmin" link="./integer/intmin.html" description="Return the smallest integer that can be represented in an integer type."></keyword>
      <keyword name="uint16" link="./integer/uint16.html" description="Converts to 16-bit unsigned integer."></keyword>
      <keyword name="uint32" link="./integer/uint32.html" description="Converts to 32-bit unsigned integer."></keyword>
      <keyword name="uint64" link="./integer/uint64.html" description="Converts to 64-bit unsigned integer."></keyword>
      <keyword name="uint8" link="./integer/uint8.html" description="Converts to 8-bit unsigned integer."></keyword>
    </section>
    <section name="Sparse type">
      <chapter_description>
        <p>The Sparse Type module provides tools for creating and manipulating sparse matrices in Nelson.</p>
        <p>It supports efficient storage and computation for matrices with a large number of zero elements, including conversion between sparse and full representations, generation of special sparse matrices, and access to nonzero elements.</p>
        <p>This module enables memory-efficient handling of large datasets and optimized numerical operations on sparse structures.</p>
    </chapter_description>
      <keyword name="IJV" link="./sparse/IJV.html" description="Returns I,J,V triplets from a sparse matrix."></keyword>
      <keyword name="full" link="./sparse/full.html" description="Sparse to full matrix conversion."></keyword>
      <keyword name="nnz" link="./sparse/nnz.html" description="Return the number of nonzero elements."></keyword>
      <keyword name="nzmax" link="./sparse/nzmax.html" description="Reserved size for nonzero elements."></keyword>
      <keyword name="sparse" link="./sparse/sparse.html" description="Sparse matrix definition."></keyword>
      <keyword name="speye" link="./sparse/speye.html" description="Sparse identity matrix."></keyword>
      <keyword name="spones" link="./sparse/spones.html" description="Replaces non zero sparse matrix elements with ones."></keyword>
      <keyword name="sprand" link="./sparse/sprand.html" description="Sparse uniformly distributed random matrix."></keyword>
      <keyword name="sprandn" link="./sparse/sprandn.html" description="Sparse normally distributed random matrix."></keyword>
    </section>
    <section name="String type">
      <chapter_description>
        <p>The String Type module provides comprehensive tools for creating, manipulating, and analyzing text in Nelson.</p>
        <p>It supports conversion between character arrays and string arrays, concatenation, trimming, justification, and case conversion.</p>
        <p>The module also includes functions for searching, matching, replacing, and formatting strings, enabling flexible text processing for both simple and complex string operations.</p>
    </chapter_description>
      <keyword name="append" link="./string/append.html" description="combines strings horizontally."></keyword>
      <keyword name="blanks" link="./string/blanks.html" description="creates an string of blank characters."></keyword>
      <keyword name="char" link="./string/char.html" description="Converts to a character array."></keyword>
      <keyword name="contains" link="./string/contains.html" description="checks if string contains with pattern."></keyword>
      <keyword name="convertCharsToStrings" link="./string/convertCharsToStrings.html" description="Convert chars arrays to string arrays."></keyword>
      <keyword name="convertStringsToChars" link="./string/convertStringsToChars.html" description="Convert string arrays to character arrays."></keyword>
      <keyword name="count" link="./string/count.html" description="Computes the number of occurrences of an pattern."></keyword>
      <keyword name="deblank" link="./string/deblank.html" description="Remove trailing whitespace."></keyword>
      <keyword name="endsWith" link="./string/endsWith.html" description="checks if string ends with pattern."></keyword>
      <keyword name="int2str" link="./string/int2str.html" description="Convert an integer array to a string"></keyword>
      <keyword name="isStringScalar" link="./string/isStringScalar.html" description="checks if input is string array with one element."></keyword>
      <keyword name="isletter" link="./string/isletter.html" description="Determine which characters are letters."></keyword>
      <keyword name="isspace" link="./string/isspace.html" description="Determine which characters are space."></keyword>
      <keyword name="join" link="./string/join.html" description="Combine strings."></keyword>
      <keyword name="mat2str" link="./string/mat2str.html" description="Matrix to String."></keyword>
      <keyword name="matches" link="./string/matches.html" description="Determine if pattern matches with strings."></keyword>
      <keyword name="newline" link="./string/newline.html" description="Returns a newline character."></keyword>
      <keyword name="num2str" link="./string/num2str.html" description="Converts numbers to character array."></keyword>
      <keyword name="replace" link="./string/replace.html" description="Replaces strings in another."></keyword>
      <keyword name="sprintf" link="./string/sprintf.html" description="Writes data to a string."></keyword>
      <keyword name="startsWith" link="./string/startsWith.html" description="checks if string starts with pattern."></keyword>
      <keyword name="str2double" link="./string/str2double.html" description="Converts a string to double."></keyword>
      <keyword name="strcat" link="./string/strcat.html" description="concatenate strings horizontally."></keyword>
      <keyword name="strcmp" link="./string/strcmp.html" description="Strings comparaison."></keyword>
      <keyword name="strcmpi" link="./string/strcmpi.html" description="Strings comparaison (case insensitive)."></keyword>
      <keyword name="strfind" link="./string/strfind.html" description="Find a string in another."></keyword>
      <keyword name="string" link="./string/string.html" description="string array constructor."></keyword>
      <keyword name="strings" link="./string/strings.html" description="Create string array without characters."></keyword>
      <keyword name="strjust" link="./string/strjust.html" description="Justify strings"></keyword>
      <keyword name="strlength" link="./string/strlength.html" description="Length of strings in cell of strings or string array."></keyword>
      <keyword name="strncmp" link="./string/strncmp.html" description="Compares first n characters of strings."></keyword>
      <keyword name="strncmpi" link="./string/strncmpi.html" description="Compares first n characters of strings (case sensitive)."></keyword>
      <keyword name="strrep" link="./string/strrep.html" description="Replaces strings in another."></keyword>
      <keyword name="strtrim" link="./string/strtrim.html" description="Remove leading and trailing whitespace."></keyword>
      <keyword name="tolower" link="./string/tolower.html" description="Lower case conversion."></keyword>
      <keyword name="toupper" link="./string/toupper.html" description="Upper case conversion."></keyword>
    </section>
    <section name="Function_handle functions">
      <chapter_description>
        <p>The Function Handle Type module provides tools for creating and managing function handles in Nelson.</p>
        <p>It supports anonymous functions, conversion between strings and function handles, and verification of function handle objects.</p>
        <p>This module enables flexible and dynamic function invocation, allowing functions to be passed, stored, and executed programmatically.</p>
    </chapter_description>
      <keyword name="Anonymous Functions" link="./function_handle/anonymous_function.html" description="Anonymous Functions."></keyword>
      <keyword name="func2str" link="./function_handle/func2str.html" description="Return a function handle constructed from a string."></keyword>
      <keyword name="isfunction_handle" link="./function_handle/isfunction_handle.html" description="Checks if value is a function handle."></keyword>
      <keyword name="str2func" link="./function_handle/str2func.html" description="Returns a function handle from a string."></keyword>
    </section>
    <section name="Handle">
      <chapter_description>
        <p>The Handle module provides tools for creating and manipulating handle objects in Nelson.</p>
        <p>Handle objects are lightweight references to larger data structures, enabling efficient memory management and data sharing between different parts of a program.</p>
        <p>This module includes functions for creating, copying, and destroying handle objects, as well as for managing their lifetimes and ensuring proper cleanup.</p>
    </chapter_description>
      <keyword name="delete" link="./handle/delete.html" description="delete handle objects."></keyword>
      <keyword name="get" link="./handle/get.html" description="Retrieve a property value from an handle object."></keyword>
      <keyword name="invoke" link="./handle/invoke.html" description="Invoke method on an handle object."></keyword>
      <keyword name="ismethod" link="./handle/ismethod.html" description="Return true if method of handle object."></keyword>
      <keyword name="isprop" link="./handle/isprop.html" description="Return true if property of handle object."></keyword>
      <keyword name="isvalid" link="./handle/isvalid.html" description="Return true if variable h is a valid handle."></keyword>
      <keyword name="methods" link="./handle/methods.html" description="Returns the methods name of an object handle."></keyword>
      <keyword name="properties" link="./handle/properties.html" description="Returns the properties name of an object handle."></keyword>
      <keyword name="set" link="./handle/set.html" description="Set a property value of an handle object."></keyword>
    </section>
    <section name="Data structures">
      <chapter_description>
        <p>The Data Structures module provides tools for creating, manipulating, and inspecting arrays, cells, and structures in Nelson.</p>
        <p>It enables conversion between different data formats, access and modification of fields, application of functions to array elements, and organization of structured data.</p>
        <p>This module facilitates flexible handling of complex data, supporting both programmatic operations and dynamic data management.</p>
    </chapter_description>
      <keyword name="arrayfun" link="./data_structures/arrayfun.html" description="Apply a function to each element of an array."></keyword>
      <keyword name="cell" link="./data_structures/cell.html" description="Create cell array of empty matrices."></keyword>
      <keyword name="cell2mat" link="./data_structures/cell2mat.html" description="Transform a cell array containing matrices into a single, concatenated matrix."></keyword>
      <keyword name="cell2struct" link="./data_structures/cell2struct.html" description="Creates a struct from a cell."></keyword>
      <keyword name="celldisp" link="./data_structures/celldisp.html" description="Display cell array contents."></keyword>
      <keyword name="cellfun" link="./data_structures/cellfun.html" description="Evaluates an function on a cell."></keyword>
      <keyword name="cellstr" link="./data_structures/cellstr.html" description="Converts to cell of character array."></keyword>
      <keyword name="fieldnames" link="./data_structures/fieldnames.html" description="Returns field names of a structure or an handle."></keyword>
      <keyword name="getfield" link="./data_structures/getfield.html" description="Returns value of a field in a struct."></keyword>
      <keyword name="iscellstr" link="./data_structures/iscellstr.html" description="Returns if a variable is a cell of strings."></keyword>
      <keyword name="isfield" link="./data_structures/isfield.html" description="Checks if a fieldname exists in a struct."></keyword>
      <keyword name="namedargs2cell" link="./data_structures/namedargs2cell.html" description="Converts a struct containing name-value pairs to a cell."></keyword>
      <keyword name="num2cell" link="./data_structures/num2cell.html" description="Convert array to cell array with consistently sized cells."></keyword>
      <keyword name="orderfields" link="./data_structures/orderfields.html" description="Reorganize the fields of a structured array."></keyword>
      <keyword name="renameStructField" link="./data_structures/renameStructField.html" description="Rename field names of a struct or struct array."></keyword>
      <keyword name="rmfield" link="./data_structures/rmfield.html" description="Remove fields from structure."></keyword>
      <keyword name="setfield" link="./data_structures/setfield.html" description="Set structure field contents."></keyword>
      <keyword name="struct" link="./data_structures/struct.html" description="Creates a struct."></keyword>
      <keyword name="struct2cell" link="./data_structures/struct2cell.html" description="Creates a cell from a structure."></keyword>
    </section>
    <section name="Dictionaries">
      <chapter_description>
      <p>The Dictionary module provides tools for working with key-value mappings in Nelson.</p>
      <p>It supports creation and configuration of dictionaries with defined key and value types, querying and modifying entries, and managing the overall structure.</p>
      <p>This module enables efficient storage, retrieval, and manipulation of data indexed by unique keys, making it ideal for associative arrays, lookups, and dynamic data management.</p>
    </chapter_description>
      <keyword name="configureDictionary" link="./dictionary/configureDictionary.html" description="Generate a dictionary with defined key and value types."></keyword>
      <keyword name="dictionary" link="./dictionary/dictionary.html" description="Object that maps unique keys to values."></keyword>
      <keyword name="entries" link="./dictionary/entries.html" description="Key-value pairs of dictionary."></keyword>
      <keyword name="insert" link="./dictionary/insert.html" description="Add entries to a dictionary."></keyword>
      <keyword name="isConfigured" link="./dictionary/isConfigured.html" description="Check if dictionary has types assigned to keys and values."></keyword>
      <keyword name="isKey" link="./dictionary/isKey.html" description="Check if dictionary contains key"></keyword>
      <keyword name="keyHash" link="./dictionary/keyHash.html" description="Create a hash code for a dictionary key."></keyword>
      <keyword name="keyMatch" link="./dictionary/keyMatch.html" description="Check whether two dictionary keys are same."></keyword>
      <keyword name="keys" link="./dictionary/keys.html" description="Keys of dictionary."></keyword>
      <keyword name="lookup" link="./dictionary/lookup.html" description="Find value in dictionary by key."></keyword>
      <keyword name="numEntries" link="./dictionary/numEntries.html" description="Number of key-value pairs in dictionary."></keyword>
      <keyword name="remove" link="./dictionary/remove.html" description="Remove dictionary entries."></keyword>
      <keyword name="types" link="./dictionary/types.html" description="Types of dictionary keys and values."></keyword>
      <keyword name="values" link="./dictionary/values.html" description="Values of dictionary."></keyword>
    </section>
    <section name="Tables">
      <chapter_description>
      <p>The Tables module provides tools for creating, accessing, and manipulating tabular data in Nelson.</p>
      <p>Tables are array-like structures with named variables (columns), each capable of holding different data types.</p>
    </chapter_description>
      <keyword name="Accessing and Manipulating Tables in Nelson" link="./table/1_accessing_manipulating_table.html" description=""></keyword>
      <keyword name="Direct computation with Table" link="./table/2_direct_compution_with_table.html" description=""></keyword>
      <keyword name="Read/Write table to files" link="./table/3_read_write_table.html" description=""></keyword>
      <keyword name="array2table" link="./table/array2table.html" description="Convert homogeneous array to table."></keyword>
      <keyword name="cell2table" link="./table/cell2table.html" description="Convert cell array to table."></keyword>
      <keyword name="head" link="./table/head.html" description="Get top rows of table or array."></keyword>
      <keyword name="height" link="./table/height.html" description="Number of table rows"></keyword>
      <keyword name="istable" link="./table/istable.html" description="Determine if input is table."></keyword>
      <keyword name="removevars" link="./table/removevars.html" description="Delete variables from table."></keyword>
      <keyword name="renamevars" link="./table/renamevars.html" description="Rename variables in table."></keyword>
      <keyword name="struct2table" link="./table/struct2table.html" description="Convert a structure array into a tabular format."></keyword>
      <keyword name="table" link="./table/table.html" description="A table-like array with named variables, capable of holding different data types"></keyword>
      <keyword name="table2array" link="./table/table2array.html" description="Convert table to homogeneous array."></keyword>
      <keyword name="table2cell" link="./table/table2cell.html" description="Convert table to cell array"></keyword>
      <keyword name="table2struct" link="./table/table2struct.html" description="Convert table to structure array"></keyword>
      <keyword name="tail" link="./table/tail.html" description="Get bottom rows of table or array."></keyword>
      <keyword name="width" link="./table/width.html" description="Number of table variables"></keyword>
    </section>
    <section name="Overloading">
      <chapter_description>
      <p>The Overloading module provides mechanisms for customizing the behavior of functions and operators in Nelson.</p>
      <p>It allows users to define how standard operations or built-in functions should behave when applied to user-defined types or objects.</p>
      <p>This capability enables the extension of Nelson’s language features, supporting more natural and expressive use of custom data structures.</p>
    </chapter_description>
      <keyword name="overloading" link="./overload/overloading.html" description="Customizing Operators and Functions"></keyword>
    </section>
    <section name="Operators">
      <chapter_description>
        <p>The Operators module provides tools for performing arithmetic, logical, relational, and array operations in Nelson.</p>
        <p>It supports element-wise and matrix computations, concatenation, subscripted referencing and assignment, and short-circuit logical operations.</p>
        <p>This module enables flexible manipulation of data structures and numerical arrays, forming the foundation for both basic calculations and advanced mathematical expressions.</p>
    </chapter_description>
      <keyword name="all" link="./operators/all.html" description="all of the elements of a matrix satisfy some condition."></keyword>
      <keyword name="and" link="./operators/and.html" description="logical 'AND' operator, &amp;"></keyword>
      <keyword name="any" link="./operators/any.html" description="any of the elements of a matrix satisfy some condition."></keyword>
      <keyword name="bitand" link="./operators/bitand.html" description="Bit-wise AND"></keyword>
      <keyword name="bitor" link="./operators/bitor.html" description="Bit-wise OR"></keyword>
      <keyword name="bitxor" link="./operators/bitxor.html" description="Bit-wise XOR"></keyword>
      <keyword name="cat" link="./operators/cat.html" description="Concatenate arrays."></keyword>
      <keyword name="colon" link="./operators/colon.html" description="colon operator ':'."></keyword>
      <keyword name="ctranspose" link="./operators/ctranspose.html" description="Returns complex conjugate transpose: ' operator."></keyword>
      <keyword name="eq" link="./operators/eq.html" description="equality, == operator."></keyword>
      <keyword name="ge" link="./operators/ge.html" description="greater than or equal, &gt;= operator."></keyword>
      <keyword name="gt" link="./operators/gt.html" description="greater than, &gt; operator."></keyword>
      <keyword name="horzcat" link="./operators/horzcat.html" description="Horizontal concatenation."></keyword>
      <keyword name="ismember" link="./operators/ismember.html" description="Array elements that are members of another array."></keyword>
      <keyword name="ldivide" link="./operators/ldivide.html" description="Left division, .\ operator."></keyword>
      <keyword name="le" link="./operators/le.html" description="less than or equal, = operator."></keyword>
      <keyword name="lt" link="./operators/lt.html" description="less than, &lt; operator."></keyword>
      <keyword name="minus" link="./operators/minus.html" description="Subtraction, - operator"></keyword>
      <keyword name="mldivide" link="./operators/mldivide.html" description="Matrix left division, \ operator."></keyword>
      <keyword name="mpower" link="./operators/mpower.html" description="Matrix power, ^ operator"></keyword>
      <keyword name="mrdivide" link="./operators/mrdivide.html" description="Matrix right division, / operator."></keyword>
      <keyword name="mtimes" link="./operators/mtimes.html" description="Matrix multiplication, * operator"></keyword>
      <keyword name="ne" link="./operators/ne.html" description="Inequality, ~= operator"></keyword>
      <keyword name="not" link="./operators/not.html" description="not logical, ~ operator"></keyword>
      <keyword name="or" link="./operators/or.html" description="logical 'OR' operator, |"></keyword>
      <keyword name="plus" link="./operators/plus.html" description="Addition, + operator"></keyword>
      <keyword name="power" link="./operators/power.html" description="Element wise power, .^ operator"></keyword>
      <keyword name="rdivide" link="./operators/rdivide.html" description="Right division, ./ operator"></keyword>
      <keyword name="shortcutand" link="./operators/shortcutand.html" description="Short circuit 'AND' operator, &amp;&amp;"></keyword>
      <keyword name="shortcutor" link="./operators/shortcutor.html" description="Short circuit 'OR' operator, ||"></keyword>
      <keyword name="subsasgn" link="./operators/subsasgn.html" description="Redefine subscripted assignment."></keyword>
      <keyword name="subsindex" link="./operators/subsindex.html" description="Convert an object to an index vector."></keyword>
      <keyword name="subsref" link="./operators/subsref.html" description="Subscripted reference."></keyword>
      <keyword name="mtimes" link="./operators/times.html" description="Element wise multiplication, .* operator"></keyword>
      <keyword name="transpose" link="./operators/transpose.html" description="Returns vector or matrix transpose: .' operator."></keyword>
      <keyword name="uminus" link="./operators/uminus.html" description="Unary minus, - operator"></keyword>
      <keyword name="uplus" link="./operators/uplus.html" description="Unary plus, + operator"></keyword>
      <keyword name="vertcat" link="./operators/vertcat.html" description="Vertical concatenation."></keyword>
    </section>
    <section name="Constructors functions">
      <chapter_description>
      <p>The Constructors module provides tools for creating fundamental numeric values, scalars, vectors, and matrices in Nelson.</p>
      <p>It includes constants, identity and diagonal matrices, and special values such as infinity, NaN, and machine precision.</p>
      <p>This module forms the basis for initializing data structures and performing mathematical and numerical computations.</p>
    </chapter_description>
      <keyword name="Inf" link="./constructors_functions/Inf.html" description="Infinity"></keyword>
      <keyword name="NaN" link="./constructors_functions/NaN.html" description="Creates an Not-a-Number"></keyword>
      <keyword name="diag" link="./constructors_functions/diag.html" description="Get diagonal elements of matrix or create diagonal matrix."></keyword>
      <keyword name="eps" link="./constructors_functions/eps.html" description="Creates an epsilon (machine precision)"></keyword>
      <keyword name="eye" link="./constructors_functions/eye.html" description="Creates an identity matrix."></keyword>
      <keyword name="i" link="./constructors_functions/i.html" description="Pure Imaginary number."></keyword>
      <keyword name="ones" link="./constructors_functions/ones.html" description="Creates an matrix made of ones."></keyword>
      <keyword name="pi" link="./constructors_functions/pi.html" description="Ratio of circle's circumference to its diameter."></keyword>
      <keyword name="zeros" link="./constructors_functions/zeros.html" description="Creates an matrix made of zeros."></keyword>
    </section>
    <section name="Elementary functions">
      <chapter_description>
        <p>The Elementary Functions module provides a wide range of fundamental mathematical operations and matrix manipulations in Nelson.</p>
        <p>It includes numeric computations, array and matrix operations, complex number handling, rounding and scaling, and various utility functions for querying properties of arrays and matrices.</p>
        <p>The module also supports construction of special matrices, grids, and sequences, enabling robust and efficient implementation of mathematical algorithms and numerical analyses.</p>
    </chapter_description>
      <keyword name="abs" link="./elementary_functions/abs.html" description="Absolute value"></keyword>
      <keyword name="allfinite" link="./elementary_functions/allfinite.html" description="Check if all array elements are finite."></keyword>
      <keyword name="angle" link="./elementary_functions/angle.html" description="Phase angle"></keyword>
      <keyword name="base2dec" link="./elementary_functions/base2dec.html" description="Convert number in a base to decimal."></keyword>
      <keyword name="bernsteinMatrix" link="./elementary_functions/bernsteinMatrix.html" description="Bernstein matrix"></keyword>
      <keyword name="bin2dec" link="./elementary_functions/bin2dec.html" description="Convert number in base 2 to decimal."></keyword>
      <keyword name="bin2num" link="./elementary_functions/bin2num.html" description="Convert two's complement binary string to number."></keyword>
      <keyword name="blkdiag" link="./elementary_functions/blkdiag.html" description="Block diagonal matrix"></keyword>
      <keyword name="cast" link="./elementary_functions/cast.html" description="Converts variable to a different data type"></keyword>
      <keyword name="ceil" link="./elementary_functions/ceil.html" description="Round up"></keyword>
      <keyword name="circshift" link="./elementary_functions/circshift.html" description="Circular shift"></keyword>
      <keyword name="complex" link="./elementary_functions/complex.html" description="Creates an complex number."></keyword>
      <keyword name="conj" link="./elementary_functions/conj.html" description="Complex conjugate"></keyword>
      <keyword name="deal" link="./elementary_functions/deal.html" description="Distribute inputs to outputs."></keyword>
      <keyword name="dec2base" link="./elementary_functions/dec2base.html" description="Convert decimal number to another base."></keyword>
      <keyword name="dec2bin" link="./elementary_functions/dec2bin.html" description="Convert decimal number to base 2."></keyword>
      <keyword name="dec2hex" link="./elementary_functions/dec2hex.html" description="Convert decimal number to base 16."></keyword>
      <keyword name="exp" link="./elementary_functions/exp.html" description="Exponential"></keyword>
      <keyword name="factorial" link="./elementary_functions/factorial.html" description="Factorial function"></keyword>
      <keyword name="filter" link="./elementary_functions/filter.html" description="1-D digital filter"></keyword>
      <keyword name="find" link="./elementary_functions/find.html" description="Find Non-zero Elements"></keyword>
      <keyword name="fix" link="./elementary_functions/fix.html" description="Round towards zero"></keyword>
      <keyword name="flip" link="./elementary_functions/flip.html" description="Flip order of elements"></keyword>
      <keyword name="flipdim" link="./elementary_functions/flipdim.html" description="Flip array along specified dimension"></keyword>
      <keyword name="fliplr" link="./elementary_functions/fliplr.html" description="Flip order of elements left to right"></keyword>
      <keyword name="flipud" link="./elementary_functions/flipud.html" description="Flip order of elements up to dow"></keyword>
      <keyword name="floor" link="./elementary_functions/floor.html" description="Round down"></keyword>
      <keyword name="hadamard" link="./elementary_functions/hadamard.html" description="Hadamard matrix"></keyword>
      <keyword name="hankel" link="./elementary_functions/hankel.html" description="Hankel matrix"></keyword>
      <keyword name="hex2dec" link="./elementary_functions/hex2dec.html" description="Convert number in base 16 to decimal."></keyword>
      <keyword name="hilb" link="./elementary_functions/hilb.html" description="Hilbert matrix"></keyword>
      <keyword name="hypot" link="./elementary_functions/hypot.html" description="Square root of sum of squares"></keyword>
      <keyword name="imag" link="./elementary_functions/imag.html" description="Imaginary part of an complex number."></keyword>
      <keyword name="ind2sub" link="./elementary_functions/ind2sub.html" description="Linear index to matrix subscript values"></keyword>
      <keyword name="invhilb" link="./elementary_functions/invhilb.html" description="Inverse of Hilbert matrix"></keyword>
      <keyword name="ipermute" link="./elementary_functions/ipermute.html" description="Inverse permute array dimensions."></keyword>
      <keyword name="isapprox" link="./elementary_functions/isapprox.html" description="Return true if arguments are approximately equal, within the precision."></keyword>
      <keyword name="iscolumn" link="./elementary_functions/iscolumn.html" description="Determine whether input is column vector."></keyword>
      <keyword name="istriu" link="./elementary_functions/isdiag.html" description="Checks if matrix is diagonal."></keyword>
      <keyword name="isequal" link="./elementary_functions/isequal.html" description="Return true if all arguments x1, x2, ... , xn are equal (same dimensions, same values)."></keyword>
      <keyword name="isequaln" link="./elementary_functions/isequaln.html" description="Return true if all arguments x1, x2, ... , xn are equal (same dimensions, same values or NaNs)."></keyword>
      <keyword name="isequalto" link="./elementary_functions/isequalto.html" description="Return true if all arguments x1, x2, ... , xn are equal (same type, same dimensions, same values or NaNs)."></keyword>
      <keyword name="isfinite" link="./elementary_functions/isfinite.html" description="Check for finite entries."></keyword>
      <keyword name="isinf" link="./elementary_functions/isinf.html" description="Check for Infinity entries."></keyword>
      <keyword name="ismatrix" link="./elementary_functions/ismatrix.html" description="determines whether input is matrix or not"></keyword>
      <keyword name="isnan" link="./elementary_functions/isnan.html" description="Check for Not a Number entries."></keyword>
      <keyword name="isrow" link="./elementary_functions/isrow.html" description="Determine whether input is row vector."></keyword>
      <keyword name="isscalar" link="./elementary_functions/isscalar.html" description="Check if the input is a scalar"></keyword>
      <keyword name="istril" link="./elementary_functions/istril.html" description="Checks if matrix is lower triangular."></keyword>
      <keyword name="istriu" link="./elementary_functions/istriu.html" description="Checks if matrix is upper triangular."></keyword>
      <keyword name="isvector" link="./elementary_functions/isvector.html" description="Checks input is vector."></keyword>
      <keyword name="length" link="./elementary_functions/length.html" description="Length of an object."></keyword>
      <keyword name="linspace" link="./elementary_functions/linspace.html" description="linearly spaced vector constructor."></keyword>
      <keyword name="log" link="./elementary_functions/log.html" description="Natural logarithm."></keyword>
      <keyword name="log10" link="./elementary_functions/log10.html" description="Common logarithm (base 10)."></keyword>
      <keyword name="log1p" link="./elementary_functions/log1p.html" description="log(1 + x) accurately for small values of x."></keyword>
      <keyword name="log2" link="./elementary_functions/log2.html" description="dissect floating-point numbers into base 2 exponent and mantissa."></keyword>
      <keyword name="logspace" link="./elementary_functions/logspace.html" description="logarithmically spaced vector constructor."></keyword>
      <keyword name="magic" link="./elementary_functions/magic.html" description="Magic square"></keyword>
      <keyword name="meshgrid" link="./elementary_functions/meshgrid.html" description="Cartesian rectangular grid in 2-D or 3-D."></keyword>
      <keyword name="minus" link="./elementary_functions/minus.html" description="Subtraction, - operator"></keyword>
      <keyword name="mod" link="./elementary_functions/mod.html" description="Modulus after division."></keyword>
      <keyword name="ndgrid" link="./elementary_functions/ndgrid.html" description="Rectangular grid in N-D space"></keyword>
      <keyword name="ndims" link="./elementary_functions/ndims.html" description="Number of dimensions of an array."></keyword>
      <keyword name="nextpow2" link="./elementary_functions/nextpow2.html" description="Exponent of next higher power of 2"></keyword>
      <keyword name="norm" link="./elementary_functions/norm.html" description="Matrix and vector norms"></keyword>
      <keyword name="normest" link="./elementary_functions/normest.html" description="2-norm estimate"></keyword>
      <keyword name="nthroot" link="./elementary_functions/nthroot.html" description="The real 𝑛th root of real number."></keyword>
      <keyword name="num2bin" link="./elementary_functions/num2bin.html" description="Convert number to binary representation."></keyword>
      <keyword name="numel" link="./elementary_functions/numel.html" description="Number of elements."></keyword>
      <keyword name="permute" link="./elementary_functions/permute.html" description="Permute array dimensions."></keyword>
      <keyword name="pinv" link="./elementary_functions/pinv.html" description="Moore-Penrose pseudoinverse"></keyword>
      <keyword name="pow2" link="./elementary_functions/pow2.html" description="Base 2 exponentiation and scaling of floating-point numbers."></keyword>
      <keyword name="real" link="./elementary_functions/real.html" description="Real part of an complex number."></keyword>
      <keyword name="rem" link="./elementary_functions/rem.html" description="Remainder after division."></keyword>
      <keyword name="repmat" link="./elementary_functions/repmat.html" description="Replicate and tile an array."></keyword>
      <keyword name="reshape" link="./elementary_functions/reshape.html" description="Reshapes a vector or a matrix to a different size matrix."></keyword>
      <keyword name="rosser" link="./elementary_functions/rosser.html" description="Classic symmetric eigenvalue test problem."></keyword>
      <keyword name="rot90" link="./elementary_functions/rot90.html" description="Rotate array 90 degrees."></keyword>
      <keyword name="round" link="./elementary_functions/round.html" description="Round to nearest integer"></keyword>
      <keyword name="shiftdim" link="./elementary_functions/shiftdim.html" description="Shift array dimensions"></keyword>
      <keyword name="sign" link="./elementary_functions/sign.html" description="Find the sign function of a number."></keyword>
      <keyword name="size" link="./elementary_functions/size.html" description="Size of an object."></keyword>
      <keyword name="sqrt" link="./elementary_functions/sqrt.html" description="Square root."></keyword>
      <keyword name="squeeze" link="./elementary_functions/squeeze.html" description="Remove dimensions of length 1."></keyword>
      <keyword name="sub2ind" link="./elementary_functions/sub2ind.html" description="Matrix subscript values to linear index"></keyword>
      <keyword name="substruct" link="./elementary_functions/substruct.html" description="Create structure argument for subsasgn or subsref"></keyword>
      <keyword name="swapbytes" link="./elementary_functions/swapbytes.html" description="Swap byte ordering."></keyword>
      <keyword name="toeplitz" link="./elementary_functions/toeplitz.html" description="Toeplitz matrix"></keyword>
      <keyword name="tril" link="./elementary_functions/tril.html" description="Lower triangular part of matrix"></keyword>
      <keyword name="triu" link="./elementary_functions/triu.html" description="Upper triangular part of matrix"></keyword>
      <keyword name="vander" link="./elementary_functions/vander.html" description="Vandermonde matrix"></keyword>
      <keyword name="wilkinson" link="./elementary_functions/wilkinson.html" description="Wilkinson's eigenvalue test matrix"></keyword>
    </section>
    <section name="Trigonometric functions">
      <chapter_description>
        <p>The Trigonometric Functions module provides a comprehensive set of functions for performing trigonometric calculations in Nelson.</p>
        <p>It includes standard trigonometric functions such as sine, cosine, and tangent, as well as their inverses and hyperbolic counterparts. The module supports angle measurements in both degrees and radians, allowing for flexible computations based on user preferences.</p>
        <p>Additionally, the module offers utility functions for converting between degrees and radians, facilitating seamless integration of trigonometric calculations into various mathematical and engineering applications.</p>
    </chapter_description>
      <keyword name="acos" link="./trigonometric_functions/acos.html" description="Computes the inverse cosine in radians for each element of x."></keyword>
      <keyword name="acosd" link="./trigonometric_functions/acosd.html" description="Inverse cosine in degrees."></keyword>
      <keyword name="acosh" link="./trigonometric_functions/acosh.html" description="Inverse hyperbolic cosine."></keyword>
      <keyword name="acot" link="./trigonometric_functions/acot.html" description="Inverse cotangent of angle in radians"></keyword>
      <keyword name="acotd" link="./trigonometric_functions/acotd.html" description="Inverse cotangent of angle in degrees"></keyword>
      <keyword name="acoth" link="./trigonometric_functions/acoth.html" description="Inverse hyperbolic cotangent."></keyword>
      <keyword name="acsc" link="./trigonometric_functions/acsc.html" description="Inverse cosecant in radians."></keyword>
      <keyword name="acscd" link="./trigonometric_functions/acscd.html" description="Inverse cosecant in degrees."></keyword>
      <keyword name="acsch" link="./trigonometric_functions/acsch.html" description="Inverse hyperbolic cosecant."></keyword>
      <keyword name="asec" link="./trigonometric_functions/asec.html" description="Inverse secant of angle in radians."></keyword>
      <keyword name="asecd" link="./trigonometric_functions/asecd.html" description="Inverse secant of argument in degrees."></keyword>
      <keyword name="asech" link="./trigonometric_functions/asech.html" description="Inverse hyperbolic secant of angle in radians."></keyword>
      <keyword name="asin" link="./trigonometric_functions/asin.html" description="Computes the inverse sine in radians for each element of x."></keyword>
      <keyword name="asind" link="./trigonometric_functions/asind.html" description="Inverse sine in degrees."></keyword>
      <keyword name="asinh" link="./trigonometric_functions/asinh.html" description="Inverse hyperbolic sine function"></keyword>
      <keyword name="atan" link="./trigonometric_functions/atan.html" description="Computes the inverse tangent in radians for each element of x."></keyword>
      <keyword name="atan2" link="./trigonometric_functions/atan2.html" description="Computes the four-quadrant inverse tangent."></keyword>
      <keyword name="atan2d" link="./trigonometric_functions/atan2d.html" description="Four-quadrant inverse tangent in degrees."></keyword>
      <keyword name="atand" link="./trigonometric_functions/atand.html" description="Inverse tangent in degrees."></keyword>
      <keyword name="atanh" link="./trigonometric_functions/atanh.html" description="Computes the inverse hyperbolic tangent."></keyword>
      <keyword name="cart2pol" link="./trigonometric_functions/cart2pol.html" description="Transforms Cartesian coordinates to polar or cylindrical."></keyword>
      <keyword name="cart2sph" link="./trigonometric_functions/cart2sph.html" description="Transforms Cartesian to spherical coordinates."></keyword>
      <keyword name="cos" link="./trigonometric_functions/cos.html" description="Computes the cosine in radians for each element of x."></keyword>
      <keyword name="cosd" link="./trigonometric_functions/cosd.html" description="Computes the cosine in degree for each element of x."></keyword>
      <keyword name="cosh" link="./trigonometric_functions/cosh.html" description="Computes the hyperbolic cosine in radians for each element of x."></keyword>
      <keyword name="cosm" link="./trigonometric_functions/cosm.html" description="Computes the matrix cosine of a square matrix."></keyword>
      <keyword name="cospi" link="./trigonometric_functions/cospi.html" description="Computes cos(X * pi) accurately."></keyword>
      <keyword name="cot" link="./trigonometric_functions/cot.html" description="Cotangent of angle in radians"></keyword>
      <keyword name="cotd" link="./trigonometric_functions/cotd.html" description="Cotangent of argument in degrees"></keyword>
      <keyword name="coth" link="./trigonometric_functions/coth.html" description="Hyperbolic cotangent."></keyword>
      <keyword name="csc" link="./trigonometric_functions/csc.html" description="Cosecant of input angle in radians."></keyword>
      <keyword name="cscd" link="./trigonometric_functions/cscd.html" description="Cosecant of argument in degrees."></keyword>
      <keyword name="csch" link="./trigonometric_functions/csch.html" description="Hyperbolic cosecant."></keyword>
      <keyword name="deg2rad" link="./trigonometric_functions/deg2rad.html" description="Convert angle from degrees to radians."></keyword>
      <keyword name="pol2cart" link="./trigonometric_functions/pol2cart.html" description="Transforms polar or cylindrical coordinates to Cartesian."></keyword>
      <keyword name="rad2deg" link="./trigonometric_functions/rad2deg.html" description="Convert angle from radians to degrees."></keyword>
      <keyword name="sec" link="./trigonometric_functions/sec.html" description="Secant of angle in radians."></keyword>
      <keyword name="secd" link="./trigonometric_functions/secd.html" description="Secant of argument in degrees."></keyword>
      <keyword name="sech" link="./trigonometric_functions/sech.html" description="Hyperbolic secant."></keyword>
      <keyword name="sin" link="./trigonometric_functions/sin.html" description="Computes the sine in radians for each element of x."></keyword>
      <keyword name="sind" link="./trigonometric_functions/sind.html" description="Computes the sine in degree for each element of x."></keyword>
      <keyword name="sinh" link="./trigonometric_functions/sinh.html" description="Computes the hyperbolic sine in radians for each element of x."></keyword>
      <keyword name="sinm" link="./trigonometric_functions/sinm.html" description="Computes the matrix sinus of a square matrix."></keyword>
      <keyword name="sinpi" link="./trigonometric_functions/sinpi.html" description="Computes sin(X * pi) accurately."></keyword>
      <keyword name="sph2cart" link="./trigonometric_functions/sph2cart.html" description="Transform spherical coordinates to Cartesian."></keyword>
      <keyword name="tan" link="./trigonometric_functions/tan.html" description="Computes the tangent in radians for each element of x."></keyword>
      <keyword name="tand" link="./trigonometric_functions/tand.html" description="Computes the tangent in degree for each element of x."></keyword>
      <keyword name="tanh" link="./trigonometric_functions/tanh.html" description="Computes the hyperbolic tangent in radians for each element of x."></keyword>
      <keyword name="tanm" link="./trigonometric_functions/tanm.html" description="Computes the matrix tangent of a square matrix."></keyword>
    </section>
    <section name="Special functions">
      <chapter_description>
        <p>The Special Functions module provides tools for performing advanced mathematical operations in Nelson.</p>
        <p>It includes functions for statistical distributions, combinatorial calculations, and other specialized mathematical computations that are essential in various scientific and engineering applications.</p>  
        <p>This module enhances Nelson's capabilities by offering a range of functions that support complex analyses and modeling tasks.</p>
    </chapter_description>
      <keyword name="betainc" link="./special_functions/betainc.html" description="Incomplete beta function"></keyword>
      <keyword name="cross" link="./special_functions/cross.html" description="Cross product."></keyword>
      <keyword name="dot" link="./special_functions/dot.html" description="Dot product."></keyword>
      <keyword name="factor" link="./special_functions/factor.html" description="Prime factors"></keyword>
      <keyword name="gamma" link="./special_functions/gamma.html" description="Gamma special function"></keyword>
      <keyword name="gammaln" link="./special_functions/gammaln.html" description="Logarithm of gamma function&#10;"></keyword>
      <keyword name="gcd" link="./special_functions/gcd.html" description="Greatest common divisor"></keyword>
      <keyword name="interp1" link="./special_functions/interp1.html" description="Linear 1-D data interpolation"></keyword>
      <keyword name="peaks" link="./special_functions/peaks.html" description="Peaks function"></keyword>
      <keyword name="primes" link="./special_functions/primes.html" description="Prime numbers less than or equal to input value"></keyword>
    </section>
    <section name="Linear algebra">
      <chapter_description>
        <p>The Linear Algebra module provides comprehensive tools for performing matrix and vector computations in Nelson.</p>
        <p>It includes functions for matrix factorization, decomposition, inversion, and analysis, as well as operations on eigenvalues, singular values, and subspaces.</p>
        <p>The module supports advanced numerical methods for evaluating matrix properties, condition numbers, and transformations, enabling efficient and accurate solutions for a wide range of linear algebra problems.</p>
    </chapter_description>
      <keyword name="balance" link="./linear_algebra/balance.html" description="Diagonal scaling to improve eigenvalue accuracy."></keyword>
      <keyword name="bandwidth" link="./linear_algebra/bandwidth.html" description="Lower and upper matrix bandwidth."></keyword>
      <keyword name="chol" link="./linear_algebra/chol.html" description="Cholesky factorization."></keyword>
      <keyword name="cond" link="./linear_algebra/cond.html" description="Condition number for inversion."></keyword>
      <keyword name="condeig" link="./linear_algebra/condeig.html" description="Condition number with respect to eigenvalues."></keyword>
      <keyword name="det" link="./linear_algebra/det.html" description="Matrix determinant."></keyword>
      <keyword name="diff" link="./linear_algebra/diff.html" description="Differences and approximate derivatives."></keyword>
      <keyword name="eig" link="./linear_algebra/eig.html" description="Eigenvalues and eigenvectors."></keyword>
      <keyword name="expm" link="./linear_algebra/expm.html" description="Computes the matrix exponential of a square matrix."></keyword>
      <keyword name="gradient" link="./linear_algebra/gradient.html" description="Numerical gradient."></keyword>
      <keyword name="inv" link="./linear_algebra/inv.html" description="Matrix inverse."></keyword>
      <keyword name="isbanded" link="./linear_algebra/isbanded.html" description="Determine if matrix is within specific bandwidth."></keyword>
      <keyword name="ishermitian" link="./linear_algebra/ishermitian.html" description="Computes if matrix is hermitian or skew-hermitian."></keyword>
      <keyword name="issymmetric" link="./linear_algebra/issymmetric.html" description="Computes if matrix is symmetric."></keyword>
      <keyword name="kron" link="./linear_algebra/kron.html" description="Kronecker tensor product."></keyword>
      <keyword name="logm" link="./linear_algebra/logm.html" description="Computes the matrix logarithm of a square matrix."></keyword>
      <keyword name="lu" link="./linear_algebra/lu.html" description="LU matrix factorization."></keyword>
      <keyword name="orth" link="./linear_algebra/orth.html" description="Range space of a matrix."></keyword>
      <keyword name="planerot" link="./linear_algebra/planerot.html" description="Givens plane rotation."></keyword>
      <keyword name="rank" link="./linear_algebra/rank.html" description="Rank of matrix."></keyword>
      <keyword name="rcond" link="./linear_algebra/rcond.html" description="Inverse condition number."></keyword>
      <keyword name="rref" link="./linear_algebra/rref.html" description="Gauss-Jordan elimination."></keyword>
      <keyword name="rsf2csf" link="./linear_algebra/rsf2csf.html" description="Convert real Schur form to complex Schur form."></keyword>
      <keyword name="schur" link="./linear_algebra/schur.html" description="Schur decomposition."></keyword>
      <keyword name="sqrtm" link="./linear_algebra/sqrtm.html" description="Computes the matrix square root of a square matrix."></keyword>
      <keyword name="subspace" link="./linear_algebra/subspace.html" description="Angle between two subspaces."></keyword>
      <keyword name="svd" link="./linear_algebra/svd.html" description="Singular Value Decomposition."></keyword>
      <keyword name="trace" link="./linear_algebra/trace.html" description="Matrix trace."></keyword>
      <keyword name="vecnorm" link="./linear_algebra/vecnorm.html" description="Vector-wise norm."></keyword>
    </section>
    <section name="Statistics">
      <chapter_description>
        <p>The Statistics module provides tools for analyzing and summarizing data in Nelson.</p>
        <p>It includes functions for computing measures of central tendency, variability, correlation, and probability distributions.</p>
        <p>The module also supports advanced data summarization structures for accurate quantile estimation, enabling robust statistical analysis and interpretation of datasets.</p>
    </chapter_description>
      <keyword name="corrcoef" link="./statistics/corrcoef.html" description="Correlation coefficients"></keyword>
      <keyword name="cov" link="./statistics/cov.html" description="Covariance"></keyword>
      <keyword name="mean" link="./statistics/mean.html" description="Mean of array elements."></keyword>
      <keyword name="normpdf" link="./statistics/normpdf.html" description="Normal probability density function"></keyword>
      <keyword name="tdigest" link="./statistics/tdigest.html" description="t-digest algorithm data structure for accurate quantile estimation with configurable compression parameters"></keyword>
      <keyword name="var" link="./statistics/var.html" description="Variance"></keyword>
    </section>
    <section name="Data analysis">
      <chapter_description>
       <p>The Data Analysis module provides tools for performing numerical and array-based analyses in Nelson.</p>
       <p>It supports cumulative operations, sorting, aggregation, convolution, and identification of unique or missing values.</p>
       <p>This module enables efficient processing, summarization, and exploration of datasets, facilitating a wide range of computational and analytical tasks.</p>
    </chapter_description>
      <keyword name="conv" link="./data_analysis/conv.html" description="Convolution and polynomial multiplication."></keyword>
      <keyword name="conv2" link="./data_analysis/conv2.html" description="2-D convolution."></keyword>
      <keyword name="cumprod" link="./data_analysis/cumprod.html" description="Cumulative product of array elements."></keyword>
      <keyword name="cumsum" link="./data_analysis/cumsum.html" description="Cumulative sum of array elements."></keyword>
      <keyword name="ismissing" link="./data_analysis/ismissing.html" description="Check for missing values."></keyword>
      <keyword name="issorted" link="./data_analysis/issorted.html" description="Determine if array is sorted."></keyword>
      <keyword name="max" link="./data_analysis/max.html" description="Maximum elements of an array."></keyword>
      <keyword name="min" link="./data_analysis/min.html" description="Minimum elements of an array."></keyword>
      <keyword name="prod" link="./data_analysis/prod.html" description="Product of array elements."></keyword>
      <keyword name="sort" link="./data_analysis/sort.html" description="Sort array elements by quick sort algorithm."></keyword>
      <keyword name="sum" link="./data_analysis/sum.html" description="Sum of array elements."></keyword>
      <keyword name="unique" link="./data_analysis/unique.html" description="Unique values."></keyword>
    </section>
    <section name="Polynomials">
      <chapter_description>
        <p>The Polynomials module provides tools for creating, manipulating, and analyzing polynomials in Nelson.</p>
        <p>It supports polynomial evaluation, differentiation, integration, fitting, root finding, and matrix polynomial operations.</p>
        <p>This module enables efficient handling of polynomial expressions for mathematical modeling, curve fitting, and numerical analysis.</p>
    </chapter_description>
      <keyword name="deconv" link="./polynomial_functions/deconv.html" description="Deconvolution and polynomial division."></keyword>
      <keyword name="poly" link="./polynomial_functions/poly.html" description="Polynomial with specified roots or characteristic polynomial."></keyword>
      <keyword name="polyder" link="./polynomial_functions/polyder.html" description="Polynomial differentiation."></keyword>
      <keyword name="polyfit" link="./polynomial_functions/polyfit.html" description="Polynomial curve fitting."></keyword>
      <keyword name="polyint" link="./polynomial_functions/polyint.html" description="Polynomial integration."></keyword>
      <keyword name="polyval" link="./polynomial_functions/polyval.html" description="Polynomial evaluation."></keyword>
      <keyword name="polyvalm" link="./polynomial_functions/polyvalm.html" description="Matrix polynomial evaluation."></keyword>
      <keyword name="roots" link="./polynomial_functions/roots.html" description="Find polynomial roots."></keyword>
    </section>
    <section name="Geometry">
      <chapter_description>
        <p>The Geometry module provides tools for performing geometric transformations and computations in Nelson.</p>
        <p>It supports rotation operations in three-dimensional space, enabling the construction of transformation matrices for manipulating objects and coordinate systems.</p>
        <p>This module is useful for applications in computer graphics, robotics, and spatial analysis.</p>
    </chapter_description>
      <keyword name="rotx" link="./geometry/rotx.html" description="3x3 transformation matrix for rotations around x-axis"></keyword>
      <keyword name="roty" link="./geometry/roty.html" description="3x3 transformation matrix for rotations around y-axis"></keyword>
      <keyword name="rotz" link="./geometry/rotz.html" description="3x3 transformation matrix for rotations around z-axis"></keyword>
    </section>
    <section name="Control System functions">
      <chapter_description>
      <p>The Control System module provides algorithms and tools for designing, analyzing, and tuning linear control systems in Nelson.</p>
      <p>It supports state-space and transfer function models, system transformations between continuous and discrete time, and computation of poles, zeros, and frequency responses.</p>
      <p>The module also includes functionality for system balancing, controllability and observability analysis, regulator and estimator design, and simulation of dynamic system responses.</p>
      <p>These tools enable robust modeling, analysis, and control of linear dynamic systems for engineering and research applications.</p>
    </chapter_description>
      <keyword name="abcdchk" link="./control_system/abcdchk.html" description="Verifies the dimensional compatibility of matrices A, B, C, and D."></keyword>
      <keyword name="acker" link="./control_system/acker.html" description="Pole placement gain selection using Ackermann's formula."></keyword>
      <keyword name="append" link="./control_system/append.html" description="Appends the inputs and outputs of the two models."></keyword>
      <keyword name="augstate" link="./control_system/augstate.html" description="Append state vector to output vector."></keyword>
      <keyword name="balreal" link="./control_system/balreal.html" description="Gramian-based balancing of state-space realizations."></keyword>
      <keyword name="bdschur" link="./control_system/bdschur.html" description="Block-diagonal Schur factorization."></keyword>
      <keyword name="bode" link="./control_system/bode.html" description="Bode plot of frequency response, magnitude and phase data."></keyword>
      <keyword name="c2d" link="./control_system/c2d.html" description="Convert model from continuous to discrete time."></keyword>
      <keyword name="care" link="./control_system/care.html" description="Continuous-time algebraic Riccati equation solution."></keyword>
      <keyword name="cloop" link="./control_system/cloop.html" description="Feedback connection of multiple models."></keyword>
      <keyword name="compreal" link="./control_system/compreal.html" description="Companion realization of transfer functions."></keyword>
      <keyword name="ctrb" link="./control_system/ctrb.html" description="Controllability of state-space model."></keyword>
      <keyword name="ctrbf" link="./control_system/ctrbf.html" description="Compute controllability staircase form."></keyword>
      <keyword name="d2c" link="./control_system/d2c.html" description="Convert model from discrete to continuous time."></keyword>
      <keyword name="damp" link="./control_system/damp.html" description="Natural frequency and damping ratio."></keyword>
      <keyword name="dare" link="./control_system/dare.html" description="Discret-time algebraic Riccati equation solution."></keyword>
      <keyword name="dcgain" link="./control_system/dcgain.html" description="Low-frequency (DC) gain of LTI system."></keyword>
      <keyword name="dlqr" link="./control_system/dlqr.html" description="Linear-quadratic (LQ) state-feedback regulator for discrete-time state-space system."></keyword>
      <keyword name="dlyap" link="./control_system/dlyap.html" description="Discrete-time Lyapunov equations."></keyword>
      <keyword name="dsort" link="./control_system/dsort.html" description="Sort discrete-time poles by magnitude."></keyword>
      <keyword name="esort" link="./control_system/esort.html" description="Sort continuous-time poles by real part."></keyword>
      <keyword name="evalfr" link="./control_system/evalfr.html" description="Evaluate frequency response at given frequency."></keyword>
      <keyword name="feedback" link="./control_system/feedback.html" description="Feedback connection of multiple models."></keyword>
      <keyword name="freqresp" link="./control_system/freqresp.html" description="Evaluate system response over a grid of frequencies."></keyword>
      <keyword name="gensig" link="./control_system/gensign.html" description="Create periodic signals for simulating system response."></keyword>
      <keyword name="gram" link="./control_system/gram.html" description="Controllability and observability Gramians."></keyword>
      <keyword name="hsvd" link="./control_system/hsvd.html" description="Hankel singular values of dynamic system."></keyword>
      <keyword name="impulse" link="./control_system/impulse.html" description="Impulse response plot of dynamic system."></keyword>
      <keyword name="initial" link="./control_system/initial.html" description="System response to initial states of state-space model."></keyword>
      <keyword name="isct" link="./control_system/isct.html" description="Checks if dynamic system model is in continuous time."></keyword>
      <keyword name="isdt" link="./control_system/isdt.html" description="Checks if dynamic system model is in discret time."></keyword>
      <keyword name="islti" link="./control_system/islti.html" description="Checks if variable is an linear model tf, ss or zpk."></keyword>
      <keyword name="issiso" link="./control_system/issiso.html" description="Checks if dynamic system model is single input and single output."></keyword>
      <keyword name="isstatic" link="./control_system/isstatic.html" description="Checks if model is static or dynamic."></keyword>
      <keyword name="kalman" link="./control_system/kalman.html" description="Design Kalman filter for state estimation."></keyword>
      <keyword name="lqe" link="./control_system/lqe.html" description="Kalman estimator design for continuous-time systems."></keyword>
      <keyword name="lqed" link="./control_system/lqed.html" description="Calculates the discrete Kalman estimator configuration based on a continuous cost function."></keyword>
      <keyword name="lqr" link="./control_system/lqr.html" description="Linear-Quadratic Regulator (LQR) design."></keyword>
      <keyword name="lqry" link="./control_system/lqry.html" description="Form linear-quadratic (LQ) state-feedback regulator with output weighting."></keyword>
      <keyword name="lsim" link="./control_system/lsim.html" description="Plot simulated time response of dynamic system to arbitrary inputs."></keyword>
      <keyword name="lyap" link="./control_system/lyap.html" description="Continuous Lyapunov equation solution."></keyword>
      <keyword name="minreal" link="./control_system/minreal.html" description="Minimal realization or pole-zero cancellation."></keyword>
      <keyword name="nyquist" link="./control_system/nyquist.html" description="Nyquist plot of frequency response."></keyword>
      <keyword name="obsv" link="./control_system/obsv.html" description="Observability of state-space model."></keyword>
      <keyword name="obsvf" link="./control_system/obsvf.html" description="Compute observability staircase form."></keyword>
      <keyword name="ord2" link="./control_system/ord2.html" description="Generate continuous second-order systems."></keyword>
      <keyword name="padecoef" link="./control_system/padecoef.html" description="Computes the Pade approximation of time delays."></keyword>
      <keyword name="parallel" link="./control_system/parallel.html" description="Parallel connection of two models."></keyword>
      <keyword name="pole" link="./control_system/pole.html" description="Poles of dynamic system."></keyword>
      <keyword name="series" link="./control_system/series.html" description="Series connection of two models."></keyword>
      <keyword name="ss" link="./control_system/ss.html" description="State-space model."></keyword>
      <keyword name="ss2tf" link="./control_system/ss2tf.html" description="Convert state-space representation to transfer function."></keyword>
      <keyword name="ssdata" link="./control_system/ssdata.html" description="Access state-space model data."></keyword>
      <keyword name="ssdelete" link="./control_system/ssdelete.html" description="Remove inputs, outputs and states from state-space system."></keyword>
      <keyword name="ssselect" link="./control_system/ssselect.html" description="Extract subsystem from larger system."></keyword>
      <keyword name="step" link="./control_system/step.html" description="Step response plot of dynamic system."></keyword>
      <keyword name="tf" link="./control_system/tf.html" description="Constructs a transfer function model."></keyword>
      <keyword name="tf2ss" link="./control_system/tf2ss.html" description="Convert transfer function filter parameters to state-space form."></keyword>
      <keyword name="tfdata" link="./control_system/tfdata.html" description="Access transfer function model data."></keyword>
      <keyword name="tzero" link="./control_system/tzero.html" description="Invariant zeros of linear system."></keyword>
      <keyword name="zero" link="./control_system/zero.html" description="Zeros and gain of SISO dynamic system."></keyword>
    </section>
    <section name="Subroutine Library In COntrol Theory">
      <chapter_description>
      <p>The SLICOT module provides advanced numerical algorithms for computations in systems and control theory.</p>
      <p>It includes tools for matrix factorization, system balancing, stability analysis, pole assignment, and solutions of Lyapunov, Riccati, and Sylvester equations.</p>
      <p>The module supports both continuous- and discrete-time systems, including descriptor and multi-input systems, enabling precise and efficient analysis, design, and control of complex dynamic systems.</p>
    </chapter_description>
      <keyword name="SLICOT License" link="./slicot/About_SLICOT_license.html" description="About SLICOT license."></keyword>
      <keyword name="slicot_ab01od" link="./slicot/slicot_ab01od.html" description="Staircase form for multi-input systems using orthogonal state and input transformations."></keyword>
      <keyword name="slicot_ab04md" link="./slicot/slicot_ab04md.html" description="Discrete-time / continuous-time systems conversion by a bilinear transformation."></keyword>
      <keyword name="slicot_ab07nd" link="./slicot/slicot_ab07nd.html" description="Inverse of a given linear system."></keyword>
      <keyword name="slicot_ab08nd" link="./slicot/slicot_ab08nd.html" description="Construction of a regular pencil for a given system such that its generalized eigenvalues are invariant zeros of the system."></keyword>
      <keyword name="slicot_ag08bd" link="./slicot/slicot_ag08bd.html" description="Zeros and Kronecker structure of a descriptor system pencil."></keyword>
      <keyword name="slicot_mb02md" link="./slicot/slicot_mb02md.html" description="Solution of Total Least-Squares problem using a SVD approach."></keyword>
      <keyword name="slicot_mb03od" link="./slicot/slicot_mb03od.html" description="Matrix rank determination by incremental condition estimation."></keyword>
      <keyword name="slicot_mb03pd" link="./slicot/slicot_mb03pd.html" description="Matrix rank determination by incremental condition estimation (row pivoting)."></keyword>
      <keyword name="slicot_mb03rd" link="./slicot/slicot_mb03rd.html" description="Reduction of a real Schur form matrix to a block-diagonal form."></keyword>
      <keyword name="slicot_mb04gd" link="./slicot/slicot_mb04gd.html" description="RQ factorization with row pivoting of a matrix."></keyword>
      <keyword name="slicot_mb04md" link="./slicot/slicot_mb04md.html" description="Balancing a general real matrix."></keyword>
      <keyword name="slicot_mb05od" link="./slicot/slicot_mb05od.html" description="Matrix exponential for a real matrix, with accuracy estimate."></keyword>
      <keyword name="slicot_mc01td" link="./slicot/slicot_mc01td.html" description="Checking stability of a given real polynomial."></keyword>
      <keyword name="slicot_sb01bd" link="./slicot/slicot_sb01bd.html" description="Pole assignment for a given matrix pair (A,B)."></keyword>
      <keyword name="slicot_sb02od" link="./slicot/slicot_sb02od.html" description="Solution of continuous- or discrete-time algebraic Riccati equations (generalized Schur vectors method)."></keyword>
      <keyword name="slicot_sb03md" link="./slicot/slicot_sb03md.html" description="Solution of continuous- or discrete-time Lyapunov equations and separation estimation."></keyword>
      <keyword name="slicot_sb03od" link="./slicot/slicot_sb03od.html" description="Solution of stable continuous- or discrete-time Lyapunov equations (Cholesky factor)."></keyword>
      <keyword name="slicot_sb04md" link="./slicot/slicot_sb04md.html" description="Solution of continuous-time Sylvester equations (Hessenberg-Schur method)."></keyword>
      <keyword name="slicot_sb04qd" link="./slicot/slicot_sb04qd.html" description="Solution of discrete-time Sylvester equations (Hessenberg-Schur method)."></keyword>
      <keyword name="slicot_sb10jd" link="./slicot/slicot_sb10jd.html" description="Converting a descriptor state-space system into regular state-space form."></keyword>
      <keyword name="slicot_sg02ad" link="./slicot/slicot_sg02ad.html" description="Solution of continuous- or discrete-time algebraic Riccati equations for descriptor systems."></keyword>
      <keyword name="slicot_tb01id" link="./slicot/slicot_tb01id.html" description="Balancing a system matrix corresponding to a triplet (A, B, C)."></keyword>
      <keyword name="slicot_tg01ad" link="./slicot/slicot_tg01ad.html" description="Balancing the matrices of the system pencil corresponding to a descriptor triple (A-lambda E, B, C)."></keyword>
    </section>
    <section name="Signal Processing">
      <chapter_description>
        <p>The Signal Processing module provides tools for analyzing and manipulating sampled signals in Nelson.</p>
        <p>It includes windowing functions, digital filtering, cross-correlation, and conversions between magnitude, power, and decibel representations.</p>
        <p>The module also supports transformation between zero-pole representations and transfer functions, enabling efficient design and analysis of discrete-time signal processing systems.</p>
    </chapter_description>
      <keyword name="bartlett" link="./signal_processing/bartlett.html" description="Bartlett window."></keyword>
      <keyword name="blackman" link="./signal_processing/blackman.html" description="Blackman window."></keyword>
      <keyword name="db2mag" link="./signal_processing/db2mag.html" description="Convert a gain in decibels (dB) to a magnitude."></keyword>
      <keyword name="db2pow" link="./signal_processing/db2pow.html" description="Convert a gain in decibels (dB) to power."></keyword>
      <keyword name="filter2" link="./signal_processing/filter2.html" description="2-D digital filter."></keyword>
      <keyword name="hamming" link="./signal_processing/hamming.html" description="Hamming window."></keyword>
      <keyword name="hann" link="./signal_processing/hann.html" description="Hann window."></keyword>
      <keyword name="mag2db" link="./signal_processing/mag2db.html" description="Convert a magnitude to decibels (dB)."></keyword>
      <keyword name="pow2db" link="./signal_processing/pow2db.html" description="Convert power to decibel."></keyword>
      <keyword name="sinc" link="./signal_processing/sinc.html" description="Sinc function."></keyword>
      <keyword name="xcorr2" link="./signal_processing/xcorr2.html" description="2-D cross-correlation."></keyword>
      <keyword name="zp2tf" link="./signal_processing/zp2tf.html" description="Zero-pole to transfer function conversion."></keyword>
    </section>
    <section name="FFTW">
      <chapter_description>
      <p>The FFTW module provides tools for computing fast Fourier transforms in Nelson.</p>
      <p>It supports one-dimensional, two-dimensional, and multidimensional transforms, as well as inverse transforms and frequency-domain manipulations.</p>
      <p>The module enables efficient spectral analysis and signal processing, leveraging high-performance algorithms for both real and complex data.</p>
    </chapter_description>
      <keyword name="FFTW License" link="./fftw/About_FFTW_license.html" description="About FFTW license."></keyword>
      <keyword name="FFTWwrapper" link="./fftw/FFTWwrapper.html" description="load/free FFTW library dynamically."></keyword>
      <keyword name="fft" link="./fftw/fft.html" description="Fast Fourier transform."></keyword>
      <keyword name="fft2" link="./fftw/fft2.html" description="2-D fast Fourier transform."></keyword>
      <keyword name="fftn" link="./fftw/fftn.html" description="N-Dimensions fast Fourier transform."></keyword>
      <keyword name="fftshift" link="./fftw/fftshift.html" description="Shift the zero-frequency component to the center of the spectrum."></keyword>
      <keyword name="fftw" link="./fftw/fftw.html" description="function for determining FFT algorithm."></keyword>
      <keyword name="ifft" link="./fftw/ifft.html" description="Inverse Fast Fourier transform."></keyword>
      <keyword name="ifftn" link="./fftw/ifftn.html" description="Inverse multidimensional fast Fourier transform."></keyword>
      <keyword name="ifftshift" link="./fftw/ifftshift.html" description="inverse of fftshift"></keyword>
    </section>
    <section name="Random">
      <chapter_description>
        <p>The Random module provides tools for generating random numbers and random sequences in Nelson.</p>
        <p>It supports uniform and normal distributions, random integer generation, permutations, and control over the random number generator state.</p>
        <p>This module is essential for simulations, probabilistic modeling, and stochastic computations.</p>
    </chapter_description>
      <keyword name="rand" link="./random/rand.html" description="Random Number."></keyword>
      <keyword name="randi" link="./random/randi.html" description="Random Integer."></keyword>
      <keyword name="randn" link="./random/randn.html" description="Normally distributed random number."></keyword>
      <keyword name="randperm" link="./random/randperm.html" description="Random permutation of integers values."></keyword>
      <keyword name="rng" link="./random/rng.html" description="Random Number Generator."></keyword>
    </section>
    <section name="OS functions">
      <chapter_description>
        <p>The OS Functions module provides tools for interacting with the operating system in Nelson.</p>
        <p>It includes functions for querying system information, managing environment variables, executing shell commands, generating GUIDs, and performing platform-specific operations.</p>
        <p>This module enables seamless integration of Nelson scripts with the underlying operating system across Windows, macOS, and Linux/Unix platforms.</p>
    </chapter_description>
      <keyword name="cmdsep" link="./os_functions/cmdsep.html" description="Command separator for current operating system."></keyword>
      <keyword name="computer" link="./os_functions/computer.html" description="System information."></keyword>
      <keyword name="createGUID" link="./os_functions/createGUID.html" description="Creates a GUID."></keyword>
      <keyword name="getenv" link="./os_functions/getenv.html" description="Get the value of an environment variable."></keyword>
      <keyword name="hostname" link="./os_functions/hostname.html" description="get host name of this computer."></keyword>
      <keyword name="ismac" link="./os_functions/ismac.html" description="Checks if version is for MacOS platform."></keyword>
      <keyword name="ispc" link="./os_functions/ispc.html" description="Checks if version is for Windows platform."></keyword>
      <keyword name="isunix" link="./os_functions/isunix.html" description="Checks if version is for  GNU Linux or Unix platform."></keyword>
      <keyword name="searchenv" link="./os_functions/searchenv.html" description="Searches for a file using environment paths."></keyword>
      <keyword name="setenv" link="./os_functions/setenv.html" description="Set the value of an environment variable."></keyword>
      <keyword name="system" link="./os_functions/system.html" description="Shell command execution."></keyword>
      <keyword name="dos" link="./os_functions/system.html" description="Shell command execution."></keyword>
      <keyword name="unix" link="./os_functions/system.html" description="Shell command execution."></keyword>
      <keyword name="username" link="./os_functions/username.html" description="get user name currently used."></keyword>
      <keyword name="winopen" link="./os_functions/winopen.html" description="Open file in appropriate application (Windows only)."></keyword>
      <keyword name="winqueryreg" link="./os_functions/winqueryreg.html" description="Read the Windows registry (Windows only)."></keyword>
    </section>
    <section name="Files and folders functions">
      <chapter_description>
      <p>The File and Folder Functions module provides tools for managing files, directories, and paths in Nelson.</p>
      <p>This module supports navigation of the file system, creation and removal of files and directories, querying file and folder properties, building and resolving paths, and handling platform-specific separators.</p>
      <p>This module enables efficient and cross-platform file system operations within Nelson scripts and applications.</p>
    </chapter_description>
      <keyword name="cd" link="./files_folders_functions/cd.html" description="Changes Nelson current directory."></keyword>
      <keyword name="copyfile" link="./files_folders_functions/copyfile.html" description="Copy files or folder."></keyword>
      <keyword name="diff_file" link="./files_folders_functions/diff_file.html" description="diff two files or strings."></keyword>
      <keyword name="dir" link="./files_folders_functions/dir.html" description="Returns file list."></keyword>
      <keyword name="fileparts" link="./files_folders_functions/fileparts.html" description="Returns the path, filename and extension of a file path."></keyword>
      <keyword name="filesep" link="./files_folders_functions/filesep.html" description="Return the file separator character for the current platform."></keyword>
      <keyword name="fullfile" link="./files_folders_functions/fullfile.html" description="Build full file name from parts."></keyword>
      <keyword name="fullpath" link="./files_folders_functions/fullpath.html" description="Returns canonical full path."></keyword>
      <keyword name="isdir" link="./files_folders_functions/isdir.html" description="Returns true is the input argument is an directory."></keyword>
      <keyword name="isfile" link="./files_folders_functions/isfile.html" description="Returns true is the input argument is a file."></keyword>
      <keyword name="isfolder" link="./files_folders_functions/isfolder.html" description="Returns true is the input argument is an directory."></keyword>
      <keyword name="ls" link="./files_folders_functions/ls.html" description="List folder contents."></keyword>
      <keyword name="mkdir" link="./files_folders_functions/mkdir.html" description="Creates a new directory."></keyword>
      <keyword name="pathsep" link="./files_folders_functions/pathsep.html" description="Return the search path separator character for the current platform."></keyword>
      <keyword name="pwd" link="./files_folders_functions/pwd.html" description="Returns current directory."></keyword>
      <keyword name="relativepath" link="./files_folders_functions/relativepath.html" description="Returns the relative path from an actual path to the target path."></keyword>
      <keyword name="rmdir" link="./files_folders_functions/rmdir.html" description="Removes a directory."></keyword>
      <keyword name="rmfile" link="./files_folders_functions/rmfile.html" description="Removes a file."></keyword>
      <keyword name="tempdir" link="./files_folders_functions/tempdir.html" description="Returns the temporary directory path."></keyword>
      <keyword name="tempname" link="./files_folders_functions/tempname.html" description="Returns an unique temporary filename."></keyword>
      <keyword name="userdir" link="./files_folders_functions/userdir.html" description="Returns the current user's path."></keyword>
    </section>
    <section name="File archiver functions">
      <chapter_description>
        <p>The File Archiver module provides tools for compressing and decompressing files in Nelson.</p>
        <p>It supports creation of zip archives and extraction of files from zip archives, enabling efficient file storage, sharing, and management.</p>
    </chapter_description>
      <keyword name="unzip" link="./file_archiver/unzip.html" description="Decompress zip file."></keyword>
      <keyword name="zip" link="./file_archiver/zip.html" description="Compress files into zip file."></keyword>
    </section>
    <section name="Memory manager functions">
      <chapter_description>
        <p>The Memory Manager module provides tools for managing variables and memory in Nelson.</p>
        <p>It supports variable creation, assignment, querying, and removal across different scopes, as well as handling global and persistent variables.</p>
        <p>The module also enables memory inspection, variable locking, and listing of workspace contents, facilitating efficient and controlled memory usage in scripts and applications.</p>
    </chapter_description>
      <keyword name="acquirevar" link="./memory_manager/acquirevar.html" description="Acquires variable value from a specified variables scope."></keyword>
      <keyword name="assignin" link="./memory_manager/assignin.html" description="Assignin value to a variable in a specified variables scope."></keyword>
      <keyword name="clear" link="./memory_manager/clear.html" description="Remove variable from workspace."></keyword>
      <keyword name="global" link="./memory_manager/global.html" description="Defines a global variable."></keyword>
      <keyword name="isglobal" link="./memory_manager/isglobal.html" description="Checks if a variable is global."></keyword>
      <keyword name="isvar" link="./memory_manager/isvar.html" description="Check for the existence of an variable."></keyword>
      <keyword name="memory" link="./memory_manager/memory.html" description="Get memory information."></keyword>
      <keyword name="persistent" link="./memory_manager/persistent.html" description="Persistent variable."></keyword>
      <keyword name="varislock" link="./memory_manager/varislock.html" description="Checks if a variable is locked."></keyword>
      <keyword name="varlock" link="./memory_manager/varlock.html" description="Locks a variable."></keyword>
      <keyword name="varunlock" link="./memory_manager/varunlock.html" description="Unlocks a variable."></keyword>
      <keyword name="who" link="./memory_manager/who.html" description="List variables in memory or in .nh5 or in .mat file."></keyword>
      <keyword name="whos" link="./memory_manager/whos.html" description="List variables in memory or in .nh5 or in .mat file with sizes and types."></keyword>
    </section>
    <section name="Date and Time">
      <chapter_description>
        <p>The Time Functions module provides tools for working with dates, times, and durations in Nelson.</p>
        <p>It supports querying the current time, measuring elapsed time, performing calculations on dates and times, converting between different time representations, and handling calendar-specific operations such as leap years and month-end calculations.</p>
        <p>This module enables precise time management, scheduling, and performance measurement in scripts and applications.</p>
    </chapter_description>
      <keyword name="addtodate" link="./time/addtodate.html" description="Modify date number by field."></keyword>
      <keyword name="calendar" link="./time/calendar.html" description="Calendar."></keyword>
      <keyword name="clock" link="./time/clock.html" description="Return the current local date and time as a date vector."></keyword>
      <keyword name="cputime" link="./time/cputime.html" description="Return the CPU time used by your Nelon session."></keyword>
      <keyword name="date" link="./time/date.html" description="Return the Current date as character vector."></keyword>
      <keyword name="datenum" link="./time/datenum.html" description="Return the date/time input as a serial day number."></keyword>
      <keyword name="datestr" link="./time/datestr.html" description="Convert date and time to string format."></keyword>
      <keyword name="datevec" link="./time/datevec.html" description="Convert a serial date number into a date vector."></keyword>
      <keyword name="eomday" link="./time/eomday.html" description="Returns last day of month."></keyword>
      <keyword name="etime" link="./time/etime.html" description="Time elapsed between date vectors."></keyword>
      <keyword name="hour" link="./time/hour.html" description="Hours part of the input date and time."></keyword>
      <keyword name="leapyear" link="./time/leapyear.html" description="Determine leap year."></keyword>
      <keyword name="minute" link="./time/minute.html" description="Minutes part of the input date and time."></keyword>
      <keyword name="now" link="./time/now.html" description="Returns current date under the form of a Unix hour."></keyword>
      <keyword name="second" link="./time/second.html" description="Seconds part of the input date and time."></keyword>
      <keyword name="sleep" link="./time/sleep.html" description="Suspend code execution."></keyword>
      <keyword name="tic" link="./time/tic.html" description="Starts a stopwatch timer."></keyword>
      <keyword name="time" link="./time/time.html" description="Return the current time as the number of seconds or nanoseconds since the epoch."></keyword>
      <keyword name="timeit" link="./time/timeit.html" description="Measure time required to run function."></keyword>
      <keyword name="toc" link="./time/toc.html" description="Read the stopwatch timer."></keyword>
      <keyword name="weekday" link="./time/weekday.html" description="Return the day of week."></keyword>
    </section>
    <section name="Stream manager">
      <chapter_description>
        <p>The Stream Manager module provides tools for managing input and output streams in Nelson.</p>
        <p>It supports reading and writing text and binary data to files, handling file positions, detecting end-of-file conditions, and managing file errors.</p>
        <p>The module also enables logging of session activity, and loading and saving workspace data, facilitating robust and flexible file I/O operations within scripts and applications.</p>
   </chapter_description>
      <keyword name="diary" link="./stream_manager/diary.html" description="Diary of a session."></keyword>
      <keyword name="fclose" link="./stream_manager/fclose.html" description="Close an opened file."></keyword>
      <keyword name="feof" link="./stream_manager/feof.html" description="Checks end of file."></keyword>
      <keyword name="ferror" link="./stream_manager/ferror.html" description="Test for i/o read/write errors."></keyword>
      <keyword name="fgetl" link="./stream_manager/fgetl.html" description="Read string from a file without newline."></keyword>
      <keyword name="fgets" link="./stream_manager/fgets.html" description="Read string from a file, stopping after a newline, or EOF, or n characters have been read."></keyword>
      <keyword name="fileread" link="./stream_manager/fileread.html" description="Read contents of file as text."></keyword>
      <keyword name="filewrite" link="./stream_manager/filewrite.html" description="Write text to a file."></keyword>
      <keyword name="fopen" link="./stream_manager/fopen.html" description="Open a file in Nelson."></keyword>
      <keyword name="fprintf" link="./stream_manager/fprintf.html" description="Writes data to a file."></keyword>
      <keyword name="fread" link="./stream_manager/fread.html" description="Read data in binary form to the file specified by the file descriptor fid."></keyword>
      <keyword name="frewind" link="./stream_manager/frewind.html" description="Set position of stream to the beginning."></keyword>
      <keyword name="fscanf" link="./stream_manager/fscanf.html" description="Reads data from a file."></keyword>
      <keyword name="fseek" link="./stream_manager/fseek.html" description="Set the file pointer to a location."></keyword>
      <keyword name="fsize" link="./stream_manager/fsize.html" description="Returns size of an opened file."></keyword>
      <keyword name="ftell" link="./stream_manager/ftell.html" description="Returns the offset of the current byte relative to the beginning of a file."></keyword>
      <keyword name="fwrite" link="./stream_manager/fwrite.html" description="Write data in binary form to the file specified by the file descriptor fid."></keyword>
      <keyword name="load" link="./stream_manager/load.html" description="load data from .nh5 or .mat file into Nelson's workspace."></keyword>
      <keyword name="save" link="./stream_manager/save.html" description="save workspace variables to .nh5 or .mat file"></keyword>
      <keyword name="sscanf" link="./stream_manager/sscanf.html" description="Read formatted data from strings."></keyword>
    </section>
    <section name="HDF5">
      <chapter_description>
        <p>The HDF5 module provides support for working with Hierarchical Data Format (HDF5) files in Nelson.</p>
        <p>It allows users to create datasets, read and write data and attributes, and explore file contents.</p>
        <p>In addition to standard HDF5 support, it includes utilities for Nelson's native .nh5 format, enabling users to save, load, and inspect workspace variables efficiently.</p>
        <p>This module is essential for managing large, structured, and portable scientific data.</p>   
    </chapter_description>
      <keyword name="h5create" link="./hdf5/h5create.html" description="Creates a data set."></keyword>
      <keyword name="h5dump" link="./hdf5/h5dump.html" description="dump the content of hdf5 file as text."></keyword>
      <keyword name="h5ls" link="./hdf5/h5ls.html" description="List the content of an HDF5 file."></keyword>
      <keyword name="h5read" link="./hdf5/h5read.html" description="Read HDF5 data set."></keyword>
      <keyword name="h5readatt" link="./hdf5/h5readatt.html" description="Read HDF5 attribute."></keyword>
      <keyword name="h5write" link="./hdf5/h5write.html" description="Writes HDF5 data set."></keyword>
      <keyword name="h5writeatt" link="./hdf5/h5writeatt.html" description="Writes HDF5 attribute."></keyword>
      <keyword name="isnh5file" link="./hdf5/isnh5file.html" description="Checks if filename a valid .nh5 file"></keyword>
      <keyword name="loadnh5" link="./hdf5/loadnh5.html" description="load data from .nh5 file into Nelson's workspace."></keyword>
      <keyword name="savenh5" link="./hdf5/savenh5.html" description="save workspace variables to .nh5 file"></keyword>
      <keyword name="whonh5" link="./hdf5/whonh5.html" description="List variables in an valid .nh5 file."></keyword>
      <keyword name="whosnh5" link="./hdf5/whosnh5.html" description="List variables in an valid .nh5 file with sizes and types."></keyword>
    </section>
    <section name="MATIO">
      <chapter_description>
        <p>The MATIO module provides support for reading and writing MAT-files, a widely used format for storing numerical data in MATLAB© and compatible environments.</p>
        <p>It enables Nelson to check MAT-file validity, load and save workspace variables, and inspect file contents.</p>
        <p>With this module, users can exchange data between Nelson and MATLAB©, making it a key component for interoperability in scientific and engineering workflows.</p>
    </chapter_description>
      <keyword name="ismatfile" link="./matio/ismatfile.html" description="Checks if filename a valid .mat file"></keyword>
      <keyword name="loadmat" link="./matio/loadmat.html" description="load data from .mat file into Nelson's workspace."></keyword>
      <keyword name="savemat" link="./matio/savemat.html" description="save workspace variables to .mat file"></keyword>
      <keyword name="whomat" link="./matio/whomat.html" description="List variables in an valid .mat file."></keyword>
      <keyword name="whosmat" link="./matio/whosmat.html" description="List variables in an valid .mat file with sizes and types."></keyword>
    </section>
    <section name="Xml Processing">
      <chapter_description>
        <p>The XML module provides functions to create, convert, and manage XML documents for
            Nelson.</p>
    </chapter_description>
      <keyword name="xmlchecker" link="./xml/xmlchecker.html" description="Checks a xmlfile against xsd."></keyword>
      <keyword name="xmlprettyprint" link="./xml/xmlprettyprint.html" description="format an XML file."></keyword>
      <keyword name="xmltransform" link="./xml/xmltransform.html" description="XML transformation using XSLT"></keyword>
    </section>
    <section name="JavaScript Object Notation">
      <chapter_description>
		<p>The JSON module provides functions to encode, decode, and format JSON data, allowing easy
			exchange of structured information between Nelson and external systems.</p>
		<p>JSON (JavaScript Object Notation) is a lightweight, text-based data format widely used
			for transmitting attribute-value pairs and arrays.</p>
		<p>This module enables Nelson to interoperate with web services, configuration files, and
			applications that rely on JSON.</p>
	</chapter_description>
      <keyword name="jsondecode" link="./JSON/jsondecode.html" description="decodes a JSON string to Nelson object."></keyword>
      <keyword name="jsonencode" link="./JSON/jsonencode.html" description="encodes a Nelson object into a JSON string."></keyword>
      <keyword name="jsonprettyprint" link="./JSON/jsonprettyprint.html" description="format an JSON string."></keyword>
    </section>
    <section name="Spreadsheet">
      <chapter_description>
        <p>The Spreadsheet module provides functions for reading and writing tabular data from and to text-based spreadsheet formats, such as CSV and delimiter-separated files.</p>
        <p>It supports importing into various data types like numeric arrays, cell arrays, and tables, as well as exporting them back to files.</p>
        <p>This enables smooth interaction with spreadsheet software (Excel, LibreOffice Calc, etc.) and data exchange between applications.</p>
    </chapter_description>
      <keyword name="csvread" link="./SPREADSHEET/csvread.html" description="Read comma-separated value (CSV) file."></keyword>
      <keyword name="csvwrite" link="./SPREADSHEET/csvwrite.html" description="Write comma-separated value file."></keyword>
      <keyword name="detectImportOptions" link="./SPREADSHEET/detectImportOptions.html" description="Create import options based on file content."></keyword>
      <keyword name="dlmread" link="./SPREADSHEET/dlmread.html" description="Read an numeric matrix from a text file file using a delimiter."></keyword>
      <keyword name="dlmwrite" link="./SPREADSHEET/dlmwrite.html" description="Write an numeric matrix to a text file file using a delimiter."></keyword>
      <keyword name="readcell" link="./SPREADSHEET/readcell.html" description="Create cell array from file."></keyword>
      <keyword name="readmatrix" link="./SPREADSHEET/readmatrix.html" description="Create matrix array from file."></keyword>
      <keyword name="readtable" link="./SPREADSHEET/readtable.html" description="Create table from file."></keyword>
      <keyword name="writecell" link="./SPREADSHEET/writecell.html" description="Write a cell to a file."></keyword>
      <keyword name="writematrix" link="./SPREADSHEET/writematrix.html" description="Write a matrix to a file."></keyword>
      <keyword name="writetable" link="./SPREADSHEET/writetable.html" description="Write table to file."></keyword>
    </section>
    <section name="Message Passing Interface">
      <chapter_description>
    <p>In the world of parallel computing, the Message Passing Interface (MPI) is the de facto
      standard for implementing programs on multiple processors.</p>
    <p>This module provides functions to initialize, manage, and finalize MPI environments, as well
      as to perform communication between processes, both point-to-point and collective.</p>
    <p>It enables Nelson programs to run efficiently on distributed-memory systems and clusters.</p>
  </chapter_description>
      <keyword name="MPI_Allreduce" link="./mpi/MPI_Allreduce.html" description="Combines values from all processes and distributes the result back to all processes."></keyword>
      <keyword name="MPI_Barrier" link="./mpi/MPI_Barrier.html" description="Blocks until all processes in the communicator have reached this routine."></keyword>
      <keyword name="MPI_Bcast" link="./mpi/MPI_Bcast.html" description="Broadcasts a message from the process with rank &quot;root&quot; to all other processes of the communicator"></keyword>
      <keyword name="MPI_Comm_delete" link="./mpi/MPI_Comm_delete.html" description="Removes MPI_Comm object."></keyword>
      <keyword name="MPI_Comm_get_name" link="./mpi/MPI_Comm_get_name.html" description="Return the print name from the communicator."></keyword>
      <keyword name="MPI_Comm_object" link="./mpi/MPI_Comm_object.html" description="Creates MPI_Comm object."></keyword>
      <keyword name="MPI_Comm_rank" link="./mpi/MPI_Comm_rank.html" description="Determines the rank of the calling process in the communicator."></keyword>
      <keyword name="MPI_Comm_size" link="./mpi/MPI_Comm_size.html" description="Determines the size of the group associated with a communicator."></keyword>
      <keyword name="MPI_Comm_split" link="./mpi/MPI_Comm_split.html" description="Partitions the group that is associated with the specified communicator into a specified number of disjoint subgroups."></keyword>
      <keyword name="MPI_Comm_used" link="./mpi/MPI_Comm_used.html" description="Returns list of current used MPI_Comm handle."></keyword>
      <keyword name="MPI_Finalize" link="./mpi/MPI_Finalize.html" description="Terminate the MPI execution environment."></keyword>
      <keyword name="MPI_Get_library_version" link="./mpi/MPI_Get_library_version.html" description="Return the version number of MPI library."></keyword>
      <keyword name="MPI_Get_processor_name" link="./mpi/MPI_Get_processor_name.html" description="Gets the name of the processor."></keyword>
      <keyword name="MPI_Get_version" link="./mpi/MPI_Get_version.html" description="Return the version number of MPI."></keyword>
      <keyword name="MPI_Init" link="./mpi/MPI_Init.html" description="Initialize the MPI execution environment."></keyword>
      <keyword name="MPI_Initialized" link="./mpi/MPI_Initialized.html" description="Indicates whether MPI_Init has been called."></keyword>
      <keyword name="MPI_Iprobe" link="./mpi/MPI_Iprobe.html" description="Nonblocking test for a message."></keyword>
      <keyword name="MPI_Probe" link="./mpi/MPI_Probe.html" description="Blocking test for a message."></keyword>
      <keyword name="MPI_Recv" link="./mpi/MPI_Recv.html" description="Blocking receive for a message."></keyword>
      <keyword name="MPI_Reduce" link="./mpi/MPI_Reduce.html" description="Reduces values on all processes to a single value."></keyword>
      <keyword name="MPI_Send" link="./mpi/MPI_Send.html" description="Performs a blocking send."></keyword>
      <keyword name="mpiexec" link="./mpi/mpiexec.html" description="Run an MPI script."></keyword>
    </section>
    <section name="Parallel">
      <chapter_description>
        <p>The parallel module provides tools for running computations asynchronously in the
            background, managing task scheduling, and retrieving results.</p>
        <p>It enables Nelson programs to execute functions concurrently, improving efficiency and
            responsiveness by offloading work to background workers.</p>
    </chapter_description>
      <keyword name="afterAll" link="./parallel/afterAll.html" description="Run function after all functions finish running in the background."></keyword>
      <keyword name="afterEach" link="./parallel/afterEach.html" description="Run function after each function finish running in the background."></keyword>
      <keyword name="backgroundPool" link="./parallel/backgroundPool.html" description="Environment for running nelson's code in the background."></keyword>
      <keyword name="cancel" link="./parallel/cancel.html" description="Stop function running in the background."></keyword>
      <keyword name="cancelAll" link="./parallel/cancelAll.html" description="Stop all functions running in the background."></keyword>
      <keyword name="fetchNext" link="./parallel/fetchNext.html" description="Retrieve next unread outputs from FevalFuture array."></keyword>
      <keyword name="fetchOutputs" link="./parallel/fetchOutputs.html" description="Retrieve results from function running in the background pool."></keyword>
      <keyword name="parfeval" link="./parallel/parfeval.html" description="Run function in background."></keyword>
      <keyword name="wait" link="./parallel/wait.html" description="Wait for futures to be completed."></keyword>
    </section>
    <section name="Inter Process Communication">
      <chapter_description>
      <p>The ipc module provides basic tools for interacting with processes and enabling communication between them.</p>
      <p>It allows retrieving process identifiers and using a communicator object for exchanging information across Nelson processes.</p> 
    </chapter_description>
      <keyword name="getpid" link="./ipc/getpid.html" description="Get nelson(s) Process IDentificator."></keyword>
      <keyword name="ipc" link="./ipc/ipc.html" description="Inter process communicator."></keyword>
    </section>
    <section name="Audio playback functions">
      <chapter_description>
		<p>The audio module provides functions for reading, writing, analyzing, and playing audio files.</p>
		<p>It supports playback control through the audioplayer object, manipulation of playback properties, and metadata handling.</p>
		<p>It also includes utilities for signal conversion and sound generation.</p>
	</chapter_description>
      <keyword name="audiodevinfo" link="./audio/audiodevinfo.html" description="Get audio devices information."></keyword>
      <keyword name="audioinfo" link="./audio/audioinfo.html" description="Get audio file information."></keyword>
      <keyword name="audiometadata" link="./audio/audiometadata.html" description="Get/Set metadata of audio file ."></keyword>
      <keyword name="audioplayer" link="./audio/audioplayer.html" description="Audio player object."></keyword>
      <keyword name="audioplayer_delete" link="./audio/audioplayer_delete.html" description="Removes audioplayer object."></keyword>
      <keyword name="audioplayer_fieldnames" link="./audio/audioplayer_fieldnames.html" description="Returns the properties name of an audioplayer object."></keyword>
      <keyword name="audioplayer_get" link="./audio/audioplayer_get.html" description="Get property value from audioplayer interface."></keyword>
      <keyword name="audioplayer_pause" link="./audio/audioplayer_pause.html" description="Pause an audioplayer object."></keyword>
      <keyword name="audioplayer_set" link="./audio/audioplayer_set.html" description="Set object or interface property to specified value."></keyword>
      <keyword name="audioplayer_stop" link="./audio/audioplayer_stop.html" description="Stops an audioplayer object."></keyword>
      <keyword name="audioplayer_used" link="./audio/audioplayer_used.html" description="Returns list of current used audioplayer handle."></keyword>
      <keyword name="audioread" link="./audio/audioread.html" description="Read an audio file."></keyword>
      <keyword name="audiosupportedformats" link="./audio/audiosupportedformats.html" description="Get audio file supported formats."></keyword>
      <keyword name="audiowrite" link="./audio/audiowrite.html" description="Writes an audio file."></keyword>
      <keyword name="beep" link="./audio/beep.html" description="Produces a beep sound."></keyword>
      <keyword name="isplaying" link="./audio/isplaying.html" description="get info about audio playback is in progress."></keyword>
      <keyword name="lin2mu" link="./audio/lin2mu.html" description="Convert audio data from linear singal to mu-law."></keyword>
      <keyword name="mu2lin" link="./audio/mu2lin.html" description="Convert audio data from mu-law to linear signal."></keyword>
      <keyword name="play" link="./audio/play.html" description="Plays an audioplayer object."></keyword>
      <keyword name="playblocking" link="./audio/playblocking.html" description="Plays an audioplayer object with blocking."></keyword>
      <keyword name="resume" link="./audio/resume.html" description="Resumes an audioplayer object."></keyword>
      <keyword name="sound" link="./audio/sound.html" description="Convert matrix of signal data to sound and play it."></keyword>
      <keyword name="soundsc" link="./audio/soundsc.html" description="Scale data and play as sound."></keyword>
      <keyword name="stop" link="./audio/stop.html" description="Stops an audioplayer object."></keyword>
    </section>
    <section name="Graphics functions">
      <chapter_description>
        <p>The graphics module provides functions for creating, customizing, and managing plots,
            figures, colormaps, and graphical objects.</p>
        <p>It includes 2-D and 3-D visualization, user interaction tools (zoom, pan, rotate), and
            utilities for working with colors, legends, axes, and text annotations.</p>
    </chapter_description>
      <keyword name="abyss" link="./graphics/abyss.html" description="Abyss colormap array."></keyword>
      <keyword name="ancestor" link="./graphics/ancestor.html" description="Ancestor of graphics object."></keyword>
      <keyword name="autumn" link="./graphics/autumn.html" description="Autumn colormap array."></keyword>
      <keyword name="axes" link="./graphics/axes.html" description="Create cartesian axes."></keyword>
      <keyword name="axis" link="./graphics/axis.html" description="Set axis limits and aspect ratios."></keyword>
      <keyword name="bar" link="./graphics/bar.html" description="Bar graph."></keyword>
      <keyword name="bone" link="./graphics/bone.html" description="Bone colormap array."></keyword>
      <keyword name="cla" link="./graphics/cla.html" description="Clear axes."></keyword>
      <keyword name="clf" link="./graphics/clf.html" description="Clear figure."></keyword>
      <keyword name="clim" link="./graphics/clim.html" description="Set colormap limits."></keyword>
      <keyword name="close" link="./graphics/close.html" description="Close one or more figures"></keyword>
      <keyword name="colorbar" link="./graphics/colorbar.html" description="Colorbar showing color scale."></keyword>
      <keyword name="colormap" link="./graphics/colormap.html" description="View and set current colormap."></keyword>
      <keyword name="colormaplist" link="./graphics/colormaplist.html" description="Provide list of colormaps."></keyword>
      <keyword name="colstyle" link="./graphics/colstyle.html" description="Parse color and style from string."></keyword>
      <keyword name="contour" link="./graphics/contour.html" description="Contour plot of matrix"></keyword>
      <keyword name="contour3" link="./graphics/contour3.html" description="Contour 3D plot of matrix"></keyword>
      <keyword name="cool" link="./graphics/cool.html" description="Cool colormap array."></keyword>
      <keyword name="copper" link="./graphics/copper.html" description="Copper colormap array."></keyword>
      <keyword name="cylinder" link="./graphics/cylinder.html" description="Create cylinder."></keyword>
      <keyword name="drawnow" link="./graphics/drawnow.html" description="Update figures and process callbacks"></keyword>
      <keyword name="figure" link="./graphics/figure.html" description="Creates an figure window."></keyword>
      <keyword name="fill" link="./graphics/fill.html" description="Create  filled 2-D patches."></keyword>
      <keyword name="flag" link="./graphics/flag.html" description="Flag colormap array."></keyword>
      <keyword name="frame2im" link="./graphics/frame2im.html" description="Retrieve image data from a movie frame."></keyword>
      <keyword name="gca" link="./graphics/gca.html" description="get current axes graphics object."></keyword>
      <keyword name="gcf" link="./graphics/gcf.html" description="get current figure graphics object."></keyword>
      <keyword name="getframe" link="./graphics/getframe.html" description="Capture figure or axes as movie frame."></keyword>
      <keyword name="Managing Callback Interruptions in Nelson" link="./graphics/graphical_callback.html" description=""></keyword>
      <keyword name="gray" link="./graphics/gray.html" description="Gray colormap array."></keyword>
      <keyword name="grid" link="./graphics/grid.html" description="Display or hide axes grid lines."></keyword>
      <keyword name="groot" link="./graphics/groot.html" description="graphic root object."></keyword>
      <keyword name="hggroup" link="./graphics/hggroup.html" description="Create group object."></keyword>
      <keyword name="hist" link="./graphics/hist.html" description="Histogram plot."></keyword>
      <keyword name="hold" link="./graphics/hold.html" description="Retain current plot when adding new plots."></keyword>
      <keyword name="hot" link="./graphics/hot.html" description="Hot colormap array."></keyword>
      <keyword name="im2frame" link="./graphics/im2frame.html" description="Convert image to movie frame."></keyword>
      <keyword name="image" link="./graphics/image.html" description="Display image from array."></keyword>
      <keyword name="imagesc" link="./graphics/imagesc.html" description="Display image from array with scaled colors."></keyword>
      <keyword name="imshow" link="./graphics/imshow.html" description="Display image."></keyword>
      <keyword name="is2D" link="./graphics/is2D.html" description="Checks if ax is a 2-D Polar or Cartesian axes."></keyword>
      <keyword name="isValidGraphicsProperty" link="./graphics/isValidGraphicsProperty.html" description="Check property name is valid."></keyword>
      <keyword name="isgraphics" link="./graphics/isgraphics.html" description="Check for graphics object."></keyword>
      <keyword name="ishold" link="./graphics/ishold.html" description="Get current hold state."></keyword>
      <keyword name="jet" link="./graphics/jet.html" description="Jet colormap array."></keyword>
      <keyword name="legend" link="./graphics/legend.html" description="Add legend to axes."></keyword>
      <keyword name="line" link="./graphics/line.html" description="Create primitive line."></keyword>
      <keyword name="loglog" link="./graphics/loglog.html" description="Log-log scale plot."></keyword>
      <keyword name="mesh" link="./graphics/mesh.html" description="Mesh surface plot."></keyword>
      <keyword name="meshz" link="./graphics/meshz.html" description="Mesh surface plot with curtain."></keyword>
      <keyword name="movie" link="./graphics/movie.html" description="Render recorded movie frames."></keyword>
      <keyword name="nebula" link="./graphics/nebula.html" description="Nebula colormap array."></keyword>
      <keyword name="newplot" link="./graphics/newplot.html" description="Prepare to produce a new plot."></keyword>
      <keyword name="pan" link="./graphics/pan.html" description="Enable pan mode."></keyword>
      <keyword name="parula" link="./graphics/parula.html" description="Parula colormap array."></keyword>
      <keyword name="patch" link="./graphics/patch.html" description="Create patches of colored polygons"></keyword>
      <keyword name="pcolor" link="./graphics/pcolor.html" description="Pseudocolor plot."></keyword>
      <keyword name="pie" link="./graphics/pie.html" description="Legacy pie chart."></keyword>
      <keyword name="pink" link="./graphics/pink.html" description="Pink colormap array."></keyword>
      <keyword name="plot" link="./graphics/plot.html" description="Linear 2-D plot."></keyword>
      <keyword name="plot3" link="./graphics/plot3.html" description="3-D line plot."></keyword>
      <keyword name="prism" link="./graphics/prism.html" description="Prism colormap array."></keyword>
      <keyword name="quiver" link="./graphics/quiver.html" description="Vector plot."></keyword>
      <keyword name="refresh" link="./graphics/refresh.html" description="Redraw current figure."></keyword>
      <keyword name="rgbplot" link="./graphics/rgbplot.html" description="Plot colormap."></keyword>
      <keyword name="ribbon" link="./graphics/ribbon.html" description="Ribbon plot."></keyword>
      <keyword name="rotate3d" link="./graphics/rotate3d.html" description="Enable rotate mode."></keyword>
      <keyword name="scatter" link="./graphics/scatter.html" description="Scatter plot."></keyword>
      <keyword name="scatter3" link="./graphics/scatter3.html" description="3D Scatter plot."></keyword>
      <keyword name="semilogx" link="./graphics/semilogx.html" description="Semilog plot (x-axis has log scale)."></keyword>
      <keyword name="semilogy" link="./graphics/semilogy.html" description="Semilog plot (y-axis has log scale)."></keyword>
      <keyword name="sky" link="./graphics/sky.html" description="Sky colormap array."></keyword>
      <keyword name="sphere" link="./graphics/sphere.html" description="Create sphere."></keyword>
      <keyword name="spring" link="./graphics/spring.html" description="Spring colormap array."></keyword>
      <keyword name="spy" link="./graphics/spy.html" description="Visualize sparsity pattern of matrix."></keyword>
      <keyword name="stairs" link="./graphics/stairs.html" description="Stairstep graph."></keyword>
      <keyword name="stem" link="./graphics/stem.html" description="Plot discrete sequence data."></keyword>
      <keyword name="subplot" link="./graphics/subplot.html" description="Create axes in tiled positions."></keyword>
      <keyword name="summer" link="./graphics/summer.html" description="Summer colormap array."></keyword>
      <keyword name="surf" link="./graphics/surf.html" description="surface plot."></keyword>
      <keyword name="surface" link="./graphics/surface.html" description="Primitive surface plot."></keyword>
      <keyword name="text" link="./graphics/text.html" description="creates text descriptions to data points."></keyword>
      <keyword name="title" link="./graphics/title.html" description="Add title."></keyword>
      <keyword name="turbo" link="./graphics/turbo.html" description="Turbo colormap array."></keyword>
      <keyword name="uicontrol" link="./graphics/uicontrol.html" description="Create user interface component."></keyword>
      <keyword name="validatecolor" link="./graphics/validatecolor.html" description="Validate color values."></keyword>
      <keyword name="view" link="./graphics/view.html" description="Camera line of sigh."></keyword>
      <keyword name="viridis" link="./graphics/viridis.html" description="Viridis colormap array."></keyword>
      <keyword name="waitfor" link="./graphics/waitfor.html" description="Wait for condition."></keyword>
      <keyword name="waitforbuttonpress" link="./graphics/waitforbuttonpress.html" description="Wait for click or key press."></keyword>
      <keyword name="waterfall" link="./graphics/waterfall.html" description="waterfall plot."></keyword>
      <keyword name="white" link="./graphics/white.html" description="white colormap array."></keyword>
      <keyword name="winter" link="./graphics/winter.html" description="Winter colormap array."></keyword>
      <keyword name="xlabel" link="./graphics/xlabel.html" description="Label x-axis."></keyword>
      <keyword name="xlim" link="./graphics/xlim.html" description="set or get x-axis limits."></keyword>
      <keyword name="ylabel" link="./graphics/ylabel.html" description="Label y-axis."></keyword>
      <keyword name="ylim" link="./graphics/ylim.html" description="set or get y-axis limits."></keyword>
      <keyword name="zlabel" link="./graphics/zlabel.html" description="Label z-axis."></keyword>
      <keyword name="zlim" link="./graphics/zlim.html" description="set or get z-axis limits."></keyword>
      <keyword name="zoom" link="./graphics/zoom.html" description="Enable zoom mode."></keyword>
    </section>
    <section name="Graphics I/O functions">
      <chapter_description>
        <p>The Graphics I/O module provides functions for importing, exporting, and managing
            graphical content and image formats.</p>
        <p>It supports reading and writing image files, copying figures, and saving plots in various
            file formats for interoperability with other applications.</p>
    </chapter_description>
      <keyword name="copygraphics" link="./graphics_io/copygraphics.html" description="Copy plot to clipboard."></keyword>
      <keyword name="imformats" link="./graphics_io/imformats.html" description="Manage supported image formats."></keyword>
      <keyword name="imread" link="./graphics_io/imread.html" description="Read image from graphics file."></keyword>
      <keyword name="imwrite" link="./graphics_io/imwrite.html" description="Write image to graphics file."></keyword>
      <keyword name="saveas" link="./graphics_io/saveas.html" description="Save figure to specific file format."></keyword>
    </section>
    <section name="Image Processing functions">
      <chapter_description>
        <p>The Image Processing module provides basic operations for manipulating images, including
            format conversion, resizing, and rotation.</p>
    </chapter_description>
      <keyword name="im2double" link="./image_processing/im2double.html" description="Convert image to double precision."></keyword>
      <keyword name="imresize" link="./image_processing/imresize.html" description="Resize image by scale or output size"></keyword>
      <keyword name="imrotate" link="./image_processing/imrotate.html" description="Rotate image by specified angle"></keyword>
    </section>
    <section name="Gui module">
      <chapter_description>
        <p>The GUI module provides functions to create and interact with graphical user interface
            components, dialogs, and application windows.</p>
    </chapter_description>
      <keyword name="commandhistory" link="./gui/commandhistory.html" description="Command History"></keyword>
      <keyword name="errordlg" link="./gui/errordlg.html" description="Creates a error dialog box."></keyword>
      <keyword name="filebrowser" link="./gui/filebrowser.html" description="Current Folder Browser"></keyword>
      <keyword name="helpdlg" link="./gui/helpdlg.html" description="Creates a help dialog box."></keyword>
      <keyword name="inserthtml" link="./gui/inserthtml.html" description="Insert html in GUI console."></keyword>
      <keyword name="lookandfeel" link="./gui/lookandfeel.html" description="default current application look and feel."></keyword>
      <keyword name="msgbox" link="./gui/msgbox.html" description="Creates a message dialog box."></keyword>
      <keyword name="openvar" link="./gui/openvar.html" description="Open variable in the Variable Editor"></keyword>
      <keyword name="qt_verbose" link="./gui/qt_verbose.html" description="show/hide Qt debug message."></keyword>
      <keyword name="questdlg" link="./gui/questdlg.html" description="Creates a question dialog box."></keyword>
      <keyword name="uigetdir" link="./gui/uigetdir.html" description="Opens dialog box to select a directory."></keyword>
      <keyword name="helpdlg" link="./gui/warndlg.html" description="Creates a warning dialog box."></keyword>
      <keyword name="workspace" link="./gui/workspace.html" description="Workspace Browser"></keyword>
    </section>
    <section name="QML engine">
      <chapter_description>
        <p>The QML Engine module allows Nelson programs to display, manipulate, and interact with graphical content using Qt's QML framework.</p>
        <p>It provides functions to manage QML components, access Qt objects, and integrate JavaScript and QML logic.</p>
    </chapter_description>
      <keyword name="QObject_classname" link="./qml_engine/QObject_classname.html" description="Returns class name of an QObject handle."></keyword>
      <keyword name="QObject_findchildren" link="./qml_engine/QObject_findchildren.html" description="Returns all children of this object with the given name."></keyword>
      <keyword name="QObject_get" link="./qml_engine/QObject_get.html" description="Retrieve a property value from an QObject handle."></keyword>
      <keyword name="QObject_iswidgettype" link="./qml_engine/QObject_iswidgettype.html" description="Returns true if the QObject is a widget."></keyword>
      <keyword name="QObject_iswindowtype" link="./qml_engine/QObject_iswindowtype.html" description="Returns true if the QObject is a window."></keyword>
      <keyword name="QObject_methodsignature" link="./qml_engine/QObject_methodsignature.html" description="Returns the signature of a method of a QObject handle."></keyword>
      <keyword name="QObject_root" link="./qml_engine/QObject_root.html" description="QObject root object."></keyword>
      <keyword name="QObject_set" link="./qml_engine/QObject_set.html" description="Set a property value of an QObject handle (set)."></keyword>
      <keyword name="QObject_undefine" link="./qml_engine/QObject_undefine.html" description="Undefine a dynamic property of a QObject handle."></keyword>
      <keyword name="QObject_used" link="./qml_engine/QObject_used.html" description="Returns list of current used QObject handle."></keyword>
      <keyword name="nelsonObject" link="./qml_engine/nelsonObject.html" description="nelson object callable from QML."></keyword>
      <keyword name="qml_addimportpath" link="./qml_engine/qml_addimportpath.html" description="Adds path as directory where the qml engine searches for installed modules."></keyword>
      <keyword name="qml_addpluginpath" link="./qml_engine/qml_addpluginpath.html" description="Adds path as directory where the qml engine searches for native plugins."></keyword>
      <keyword name="qml_clearcomponentcache" link="./qml_engine/qml_clearcomponentcache.html" description="Clears the engine's internal component cache.."></keyword>
      <keyword name="qml_collectgarbage" link="./qml_engine/qml_collectgarbage.html" description="Runs the Qml garbage collector."></keyword>
      <keyword name="qml_createqquickview" link="./qml_engine/qml_createqquickview.html" description="Load a QML file and creates a window."></keyword>
      <keyword name="qml_demos" link="./qml_engine/qml_demos.html" description="QML demos."></keyword>
      <keyword name="qml_evaluatefile" link="./qml_engine/qml_evaluatefile.html" description="Evaluates a js file."></keyword>
      <keyword name="qml_evaluatestring" link="./qml_engine/qml_evaluatestring.html" description="Evaluates a js string."></keyword>
      <keyword name="qml_importpathlist" link="./qml_engine/qml_importpathlist.html" description="Returns the list of directories where the engine searches for installed modules in a URL-based directory structure."></keyword>
      <keyword name="qml_loadfile" link="./qml_engine/qml_loadfile.html" description="Load a QML file."></keyword>
      <keyword name="qml_loadstring" link="./qml_engine/qml_loadstring.html" description="Load a QML string."></keyword>
      <keyword name="qml_offlinestoragepath" link="./qml_engine/qml_offlinestoragepath.html" description="Get the Property contains the directory to store offline user data."></keyword>
      <keyword name="qml_pluginpathlist" link="./qml_engine/qml_pluginpathlist.html" description="Returns the list of directories where the engine searches for native plugins for imported modules."></keyword>
      <keyword name="qml_setofflinestoragepath" link="./qml_engine/qml_setofflinestoragepath.html" description="Set the Property contains the directory to store offline user data."></keyword>
      <keyword name="qt_constant" link="./qml_engine/qt_constant.html" description="Returns Qt constant value."></keyword>
      <keyword name="qt_version" link="./qml_engine/qt_version.html" description="Returns Qt version used."></keyword>
    </section>
    <section name="Text editor">
      <chapter_description>
        <p>The Text Editor module provides an embedded Nelson editor for creating, editing, and
            formatting Nelson scripts and files.</p>
    </chapter_description>
      <keyword name="edit" link="./text_editor/edit.html" description="function editor."></keyword>
      <keyword name="editor" link="./text_editor/editor.html" description="call the embedded text editor."></keyword>
      <keyword name="smartindent" link="./text_editor/smartindent.html" description="Smart indent a nelson file"></keyword>
    </section>
    <section name="Web tools">
      <chapter_description>
        <p>The WebTools module provides functions to interact with web resources, transfer data via
            URLs, and work with RESTful web services.</p>
    </chapter_description>
      <keyword name="checkupdate" link="./webtools/checkupdate.html" description="Check update for Nelson's application"></keyword>
      <keyword name="repo" link="./webtools/repo.html" description="Git repository tool for Nelson"></keyword>
      <keyword name="urlencode" link="./webtools/urlencode.html" description="Replace special characters in URLs with escape characters."></keyword>
      <keyword name="weboptions" link="./webtools/weboptions.html" description="Specify parameters for RESTful web service"></keyword>
      <keyword name="webread" link="./webtools/webread.html" description="Read data from RESTful web service to Nelson's variable"></keyword>
      <keyword name="websave" link="./webtools/websave.html" description="Save data from RESTful web service to file"></keyword>
      <keyword name="webwrite" link="./webtools/webwrite.html" description="Write data to RESTful web service"></keyword>
    </section>
    <section name="Nelson in the cloud">
      <chapter_description>
        <p>It provides functions for managing connections, sending and receiving data, and handling events in a cloud environment.</p>
    </chapter_description>
      <keyword name="sioemit" link="./sio_client/sioemit.html" description="Emit an event to web client."></keyword>
      <keyword name="siogetvariable" link="./sio_client/siogetvariable.html" description="Emit an value of variable to web browser."></keyword>
    </section>
    <section name="Dynamic link">
      <chapter_description>
        <p>The Dynamic Link module enables Nelson to build, load, and call C/C++ and Fortran code at runtime.</p>
        <p>It supports generating gateways, loaders, and managing shared libraries for integration with external compiled code.</p>
        <p>By default, Nelson does not try to detect a C/C++ compiler on Windows. Do not forget to run 'configuremsvc' or 'configuremingw' once.</p>
    </chapter_description>
      <keyword name="Build C/C++ code on the fly" link="./dynamic_link/1_c_cpp_build_on_fly.html" description="Build C/C++ code on the fly"></keyword>
      <keyword name="Supported C/C++ compilers" link="./dynamic_link/2_supported_compilers.html" description=""></keyword>
      <keyword name="libpointer datatype" link="./dynamic_link/C_datatype.html" description="C/Nelson equivalent data types"></keyword>
      <keyword name="cmake" link="./dynamic_link/cmake.html" description="call CMake tool"></keyword>
      <keyword name="configuremingw" link="./dynamic_link/configuremingw.html" description="Configure Nelson to use MinGW as default C compiler"></keyword>
      <keyword name="configuremsvc" link="./dynamic_link/configuremsvc.html" description="Configure Nelson to use visual studio as default compiler"></keyword>
      <keyword name="dlcall" link="./dynamic_link/dlcall.html" description="C or Fortran Foreign function call."></keyword>
      <keyword name="dlclose" link="./dynamic_link/dlclose.html" description="Removes dllib object."></keyword>
      <keyword name="dlgeneratecleaner" link="./dynamic_link/dlgeneratecleaner.html" description="Generates cleaner.m file for C++ gateway."></keyword>
      <keyword name="dlgenerategateway" link="./dynamic_link/dlgenerategateway.html" description="Generates C++ gateway."></keyword>
      <keyword name="dlgenerateloader" link="./dynamic_link/dlgenerateloader.html" description="Generates loader.m file for C++ gateway."></keyword>
      <keyword name="dlgeneratemake" link="./dynamic_link/dlgeneratemake.html" description="Generates a makefile for building a dynamic library."></keyword>
      <keyword name="dlgenerateunloader" link="./dynamic_link/dlgenerateunloader.html" description="Generates unloader.m file for C++ gateway."></keyword>
      <keyword name="dlgetnelsonincludes" link="./dynamic_link/dlgetnelsonincludes.html" description="Returns paths of Nelson include directories."></keyword>
      <keyword name="dlgetnelsonlibraries" link="./dynamic_link/dlgetnelsonlibraries.html" description="Returns paths to Nelson library files."></keyword>
      <keyword name="dllib_used" link="./dynamic_link/dllib_used.html" description="Returns list of current used dllib handle."></keyword>
      <keyword name="dllibinfo" link="./dynamic_link/dllibinfo.html" description="Returns list of available symbols in an shared library."></keyword>
      <keyword name="dllibisloaded" link="./dynamic_link/dllibisloaded.html" description="Checks if shared library is loaded."></keyword>
      <keyword name="dlmake" link="./dynamic_link/dlmake.html" description="call make or nmake tool"></keyword>
      <keyword name="dlopen" link="./dynamic_link/dlopen.html" description="Loads an dynamic library."></keyword>
      <keyword name="dlsym" link="./dynamic_link/dlsym.html" description="Loads a C/Fortran symbol for an dynamic library."></keyword>
      <keyword name="dlsym_delete" link="./dynamic_link/dlsym_delete.html" description="Removes dlsym object."></keyword>
      <keyword name="dlsym_used" link="./dynamic_link/dlsym_used.html" description="Returns list of current used dlsym handle."></keyword>
      <keyword name="findcmake" link="./dynamic_link/findcmake.html" description="find CMake path."></keyword>
      <keyword name="getdynlibext" link="./dynamic_link/getdynlibext.html" description="Returns the extension of dynamic libraries."></keyword>
      <keyword name="havecompiler" link="./dynamic_link/havecompiler.html" description="Detect if a C/C++ compiler is configured."></keyword>
      <keyword name="libpointer" link="./dynamic_link/libpointer.html" description="Creates an C pointer object usuable in Nelson."></keyword>
      <keyword name="libpointer_delete" link="./dynamic_link/libpointer_delete.html" description="Removes libpointer object."></keyword>
      <keyword name="libpointer_isNull" link="./dynamic_link/libpointer_isNull.html" description="Checks if libpointer handle points on NULL pointer."></keyword>
      <keyword name="libpointer_plus" link="./dynamic_link/libpointer_plus.html" description="plus operator on libpointer handle."></keyword>
      <keyword name="libpointer_reshape" link="./dynamic_link/libpointer_reshape.html" description="Reshapes libpointer dimensions."></keyword>
      <keyword name="libpointer_setdatatype" link="./dynamic_link/libpointer_setdatatype.html" description="Set type of an libpointer handle."></keyword>
      <keyword name="libpointer_used" link="./dynamic_link/libpointer_used.html" description="Returns list of current used libpointer handle."></keyword>
      <keyword name="loadcompilerconf" link="./dynamic_link/loadcompilerconf.html" description="load compiler configuration."></keyword>
      <keyword name="removecompilerconf" link="./dynamic_link/removecompilerconf.html" description="Remove used compiler configuration (on Windows)."></keyword>
      <keyword name="vswhere" link="./dynamic_link/vswhere.html" description="Locate Visual Studio 2017, 2019 and newer installations"></keyword>
    </section>
    <section name="MEX functions">
      <chapter_description>
    <p>The MEX (MATLAB Executable) module allows C/C++ code to interface with Nelson, extending its
      functionality and enabling access to Nelson’s engine, variables, and functions.</p>
  </chapter_description>
      <keyword name="dlgeneratemexgateway" link="./mex/dlgeneratemexgateway.html" description="Generates C MEX gateway (internal function)."></keyword>
      <keyword name="engClose" link="./mex/engClose.html" description="Close Nelson engine session"></keyword>
      <keyword name="engEvalString" link="./mex/engEvalString.html" description="Evaluate expression in string in base scope"></keyword>
      <keyword name="engGetVariable" link="./mex/engGetVariable.html" description="Copy variable from Nelson engine workspace"></keyword>
      <keyword name="engGetVisible" link="./mex/engGetVisible.html" description="Determine visibility of Nelson engine session"></keyword>
      <keyword name="engOpen" link="./mex/engOpen.html" description="Start Nelson process"></keyword>
      <keyword name="engOpenSingleUse" link="./mex/engOpenSingleUse.html" description="Start Nelson engine session for single and nonshared use."></keyword>
      <keyword name="engOutputBuffer" link="./mex/engOutputBuffer.html" description="Specify char buffer for Nelson output"></keyword>
      <keyword name="engPutVariable" link="./mex/engPutVariable.html" description="Put variable into Nelson engine workspace"></keyword>
      <keyword name="engSetVisible" link="./mex/engSetVisible.html" description="Show or hide Nelson engine session"></keyword>
      <keyword name="mex" link="./mex/mex.html" description="Build MEX function"></keyword>
      <keyword name="mexAtExit" link="./mex/mexAtExit.html" description="Register a function to be called when the MEX-file is cleared or when Nelson exits"></keyword>
      <keyword name="mexCallMATLAB" link="./mex/mexCallMATLAB.html" description="Call a NELSON function"></keyword>
      <keyword name="mexCallMATLABWithTrap" link="./mex/mexCallMATLABWithTrap.html" description="Call a NELSON function and capture error."></keyword>
      <keyword name="mexext" link="./mex/mexext.html" description="Binary MEX file-name extension"></keyword>
    </section>
    <section name="Fortran to C">
      <chapter_description>
        <p>The F2C module allows Nelson users to convert legacy Fortran 77 source files into C code.</p>
        <p>This enables seamless integration of older Fortran routines into Nelson workflows,
            supporting compilation, execution, and interaction with Nelson variables.</p>
        <p>It is particularly useful for leveraging existing numerical algorithms or legacy
            scientific codebases within a modern Nelson environment.</p>
    </chapter_description>
      <keyword name="f2c" link="./f2c/f2c.html" description="Fortran to C converter."></keyword>
    </section>
    <section name="NIG">
      <chapter_description>
        <p>The NIG module provides tools to easily interface C or Fortran functions with Nelson.</p>
        <p>It simplifies the process of creating gateways that allow compiled routines to be called
            directly from Nelson scripts or functions, enabling high-performance computation and
            reuse of existing numerical libraries.</p>
    </chapter_description>
      <keyword name="nig" link="./nig/nig.html" description="Nelson tool to interface C or Fortran functions with Nelson."></keyword>
    </section>
    <section name="Validators">
      <chapter_description>
        <p>The Validators module provides tools for enforcing constraints and verifying input values in Nelson.</p>
        <p>It supports checking data types, numerical properties, matrix and vector dimensions, text validity, file and folder existence, and logical or numeric conditions.</p>
        <p>This module ensures robust input validation, helping to prevent errors, enforce correctness, and improve the reliability of scripts and functions.</p>
    </chapter_description>
      <keyword name="mustBeA" link="./validators/mustBeA.html" description="Checks that input value comes from one of specified classes."></keyword>
      <keyword name="mustBeColumn" link="./validators/mustBeColumn.html" description="Checks that value is a column vector or raise an error."></keyword>
      <keyword name="mustBeFile" link="./validators/mustBeFile.html" description="Checks that input path refers to file."></keyword>
      <keyword name="mustBeFinite" link="./validators/mustBeFinite.html" description="Checks that value is finite or raise an error."></keyword>
      <keyword name="mustBeFloat" link="./validators/mustBeFloat.html" description="Checks that value is floating-point or raise an error."></keyword>
      <keyword name="mustBeFolder" link="./validators/mustBeFolder.html" description="Checks that input path refers to folder."></keyword>
      <keyword name="mustBeGreaterThan" link="./validators/mustBeGreaterThan.html" description="Checks that value is greater than another value or issue error."></keyword>
      <keyword name="mustBeGreaterThanOrEqual" link="./validators/mustBeGreaterThanOrEqual.html" description="Checks that value is greater than or equal to another value or issue error."></keyword>
      <keyword name="mustBeInRange" link="./validators/mustBeInRange.html" description="Checks that value is in the specified range."></keyword>
      <keyword name="mustBeInteger" link="./validators/mustBeInteger.html" description="Checks that value is integer or raise an error."></keyword>
      <keyword name="mustBeLessThan" link="./validators/mustBeLessThan.html" description="Checks that value is less than another value or issue error."></keyword>
      <keyword name="mustBeLessThanOrEqual" link="./validators/mustBeLessThanOrEqual.html" description="Checks that value is less than or equal to another value or issue error."></keyword>
      <keyword name="mustBeLogical" link="./validators/mustBeLogical.html" description="Checks that value is logical or raise an error."></keyword>
      <keyword name="mustBeLogicalScalar" link="./validators/mustBeLogicalScalar.html" description="Checks that value is logical scalar or raise an error."></keyword>
      <keyword name="mustBeMatrix" link="./validators/mustBeMatrix.html" description="Checks that value is a matrix or raise an error."></keyword>
      <keyword name="mustBeMember" link="./validators/mustBeMember.html" description="Checks that value is member of specified array or issue error."></keyword>
      <keyword name="mustBeNegative" link="./validators/mustBeNegative.html" description="Checks that value is negative or raise an error."></keyword>
      <keyword name="mustBeNonNan" link="./validators/mustBeNonNan.html" description="Checks that value is not NaN."></keyword>
      <keyword name="mustBeNonSparse" link="./validators/mustBeNonSparse.html" description="Checks that value is not sparse."></keyword>
      <keyword name="mustBeNonZero" link="./validators/mustBeNonZero.html" description="Checks that value is not zero."></keyword>
      <keyword name="mustBeNonempty" link="./validators/mustBeNonempty.html" description="Checks that value is nonempty or raise an error."></keyword>
      <keyword name="mustBeNonmissing" link="./validators/mustBeNonmissing.html" description="Checks that value is not missing."></keyword>
      <keyword name="mustBeNonnegative" link="./validators/mustBeNonnegative.html" description="Checks that value is nonnegative or raise an error."></keyword>
      <keyword name="mustBeNonpositive" link="./validators/mustBeNonpositive.html" description="Checks that value is non positive or raise an error."></keyword>
      <keyword name="mustBeNonzeroLengthText" link="./validators/mustBeNonzeroLengthText.html" description="Checks that value is text with nonzero length or raise an error."></keyword>
      <keyword name="mustBeNumeric" link="./validators/mustBeNumeric.html" description="Checks that value is numeric or raise an error."></keyword>
      <keyword name="mustBeNumericOrLogical" link="./validators/mustBeNumericOrLogical.html" description="Checks that input is numeric or logical."></keyword>
      <keyword name="mustBePositive" link="./validators/mustBePositive.html" description="Checks that value is positive or raise an error."></keyword>
      <keyword name="mustBeReal" link="./validators/mustBeReal.html" description="Checks that value is real."></keyword>
      <keyword name="mustBeRow" link="./validators/mustBeRow.html" description="Checks that value is a row vector or raise an error."></keyword>
      <keyword name="mustBeScalarOrEmpty" link="./validators/mustBeScalarOrEmpty.html" description="Checks that value is scalar or empty or raise an error."></keyword>
      <keyword name="mustBeSparse" link="./validators/mustBeSparse.html" description="Checks that value is a sparse matrix or raise an error."></keyword>
      <keyword name="mustBeText" link="./validators/mustBeText.html" description="Checks that value is piece of text or raise an error."></keyword>
      <keyword name="mustBeTextScalar" link="./validators/mustBeTextScalar.html" description="Checks that value is single piece of text or raise an error."></keyword>
      <keyword name="mustBeValidVariableName" link="./validators/mustBeValidVariableName.html" description="Checks that value is valid variable name or raise an error."></keyword>
      <keyword name="mustBeVector" link="./validators/mustBeVector.html" description="Checks that value is vector or raise an error."></keyword>
    </section>
    <section name="Component Object Model (COM) Client Interface">
      <chapter_description>
      <p>The COM Engine module allows Nelson to interact with Windows COM (Component Object Model) and ActiveX components.</p>
      <p>It enables automation of software applications, access to their methods and properties, and manipulation of COM objects directly from Nelson scripts.</p>
      <p>This provides a way to integrate Nelson with a wide range of Windows software, including Microsoft Office applications.</p>
    </chapter_description>
      <keyword name="COM examples" link="./com_engine/1_COM_examples.html" description="Some example to show how to use COM interface."></keyword>
      <keyword name="COM_delete" link="./com_engine/COM_delete.html" description="Removes COM control or server."></keyword>
      <keyword name="COM_fieldnames" link="./com_engine/COM_fieldnames.html" description="Returns the properties name of an COM object."></keyword>
      <keyword name="COM_get" link="./com_engine/COM_get.html" description="Get property value from COM interface."></keyword>
      <keyword name="COM_invoke" link="./com_engine/COM_invoke.html" description="Invoke method on COM object or interface."></keyword>
      <keyword name="COM_ismethod" link="./com_engine/COM_ismethod.html" description="Determines if input is an existing COM object method."></keyword>
      <keyword name="COM_isprop" link="./com_engine/COM_isprop.html" description="Determines if input is an existing COM object property."></keyword>
      <keyword name="COM_methods" link="./com_engine/COM_methods.html" description="Returns the methods name of an COM object."></keyword>
      <keyword name="COM_range" link="./com_engine/COM_range.html" description="Private function: range helper."></keyword>
      <keyword name="COM_set" link="./com_engine/COM_set.html" description="Set object or interface property to specified value."></keyword>
      <keyword name="COM_used" link="./com_engine/COM_used.html" description="Returns list of current used COM handle."></keyword>
      <keyword name="COM_xlsfinfo" link="./com_engine/COM_xlsfinfo.html" description="Determines if file contains Microsoft Excel spreadsheet."></keyword>
      <keyword name="COM_xlsread" link="./com_engine/COM_xlsread.html" description="Read Microsoft Excel spreadsheet file using COM."></keyword>
      <keyword name="COM_xlswrite" link="./com_engine/COM_xlswrite.html" description="Write Microsoft Excel spreadsheet file using COM."></keyword>
      <keyword name="actxGetRunningServer" link="./com_engine/actxGetRunningServer.html" description="Handle to running instance of Automation server."></keyword>
      <keyword name="actxcontrollist" link="./com_engine/actxcontrollist.html" description="Get available ActiveX controls."></keyword>
      <keyword name="actxserver" link="./com_engine/actxserver.html" description="Creates COM server."></keyword>
      <keyword name="actxserverlist" link="./com_engine/actxserverlist.html" description="Get available ActiveX servers."></keyword>
      <keyword name="iscom" link="./com_engine/iscom.html" description="Determine whether input is COM or ActiveX object."></keyword>
    </section>
    <section name="Python engine">
      <chapter_description>
        <p>The Python Engine module allows Nelson users to seamlessly interface with Python,
            leveraging Python’s extensive ecosystem alongside Nelson’s native capabilities.</p>
        <p>It provides functions to run Python code, manage interpreter environments, and exchange
            data between Nelson and Python.</p>
    </chapter_description>
      <keyword name="The power of calling Python from Nelson" link="./python_engine/1_The_power_of_Python.html" description=""></keyword>
      <keyword name="How to install python package" link="./python_engine/2_How_to_install_python_package.html" description=""></keyword>
      <keyword name="Python Nelson types" link="./python_engine/3_python_types.html" description="Managing Data between Python and Nelson."></keyword>
      <keyword name="Python operators" link="./python_engine/4_python_overload.html" description="The representation of Python operators in Nelson."></keyword>
      <keyword name="pyargs" link="./python_engine/pyargs.html" description="Change default environment of Python interpreter."></keyword>
      <keyword name="pyenv" link="./python_engine/pyenv.html" description="Change default environment of Python interpreter."></keyword>
      <keyword name="pyrun" link="./python_engine/pyrun.html" description="Run Python statements from Nelson."></keyword>
      <keyword name="pyrunfile" link="./python_engine/pyrunfile.html" description="Run Python file from Nelson."></keyword>
    </section>
    <section name="Julia engine">
      <chapter_description>
        <p>The Julia Engine module enables Nelson users to seamlessly interface with the Julia programming language, combining Julia's high-performance numerical capabilities with Nelson's environment.</p>
        <p>It provides functions to run Julia code, manage interpreter environments, and exchange data between Nelson and Julia.</p>
    </chapter_description>
      <keyword name="jlenv" link="./julia_engine/jlenv.html" description="Change default environment of Julia interpreter."></keyword>
      <keyword name="jlrun" link="./julia_engine/jlrun.html" description="Run Julia statements from Nelson."></keyword>
      <keyword name="jlrunfile" link="./julia_engine/jlrunfile.html" description="Run Julia file from Nelson."></keyword>
      <keyword name="Julia Nelson types" link="./julia_engine/julia_types.html" description="Managing Data between Julia and Nelson."></keyword>
    </section>
    <section name="History manager">
      <chapter_description>
        <p>The History Manager module in Nelson provides tools to access and manage the command
            history of your session.</p>
        <p>It allows users to review previously executed commands, recall them for reuse, and
            maintain an organized workflow.</p>
    </chapter_description>
      <keyword name="history" link="./history_manager/history.html" description="history manager."></keyword>
    </section>
    <section name="Debugger functions">
      <chapter_description>
        <p>The Debugger module in Nelson provides functions to inspect and analyze program
            execution.</p>
        <p>It is designed to help users identify errors, trace the flow of execution, and better
            understand the state of variables during runtime.</p>
    </chapter_description>
      <keyword name="dbstack" link="./debugger/dbstack.html" description="call stack."></keyword>
    </section>
    <section name="Profiling tools">
      <chapter_description>
        <p>The Profiler module in Nelson provides functions to measure and analyze the execution performance of code.</p>
        <p>It helps users identify bottlenecks, optimize slow parts of programs, and improve overall efficiency.</p>
    </chapter_description>
      <keyword name="profile" link="./profiler/profile.html" description="Profile execution time for Macro functions."></keyword>
      <keyword name="profsave" link="./profiler/profsave.html" description="Save profile result to HTML format."></keyword>
    </section>
    <section name="Tests framework for Nelson">
      <chapter_description>
        <p>The Test Manager module in Nelson provides tools for automated testing of code, enabling users to validate functionality, ensure correctness, and manage test cases efficiently.</p>
        <p>This module supports creating reference outputs, running test suites, and conditionally skipping tests.</p>
    </chapter_description>
      <keyword name="test_makeref" link="./tests_manager/test_makeref.html" description="Creates a '.ref' file for a test"></keyword>
      <keyword name="test_run" link="./tests_manager/test_run.html" description="Runs tests"></keyword>
      <keyword name="skip_testsuite" link="./tests_manager/test_skip_testsuite.html" description="Skip test suite on condition"></keyword>
    </section>
    <section name="Assertion functions">
      <chapter_description>
        <p>The Asserts Functions module in Nelson provides tools for validating program behavior and
      verifying conditions during development or testing.</p>
        <p>These functions help ensure that computations and logical conditions meet expected criteria,
      improving code reliability and catching errors early.</p>
    </chapter_description>
      <keyword name="assert" link="./assert_functions/assert.html" description="Check that condition is true."></keyword>
      <keyword name="assert_checkerror" link="./assert_functions/assert_checkerror.html" description="Check that a command raises the expected error."></keyword>
      <keyword name="assert_isapprox" link="./assert_functions/assert_isapprox.html" description="Check that computed and expected values are approximately equal."></keyword>
      <keyword name="assert_isequal" link="./assert_functions/assert_isequal.html" description="Check that computed and expected values are equal."></keyword>
      <keyword name="assert_isfalse" link="./assert_functions/assert_isfalse.html" description="Check that condition is false."></keyword>
      <keyword name="assert_istrue" link="./assert_functions/assert_istrue.html" description="Check that condition is true."></keyword>
    </section>
    <section name="Documentation and Help Management">
      <chapter_description>
        <p>The Help Tools module provides functions to create, convert, and manage documentation for
            Nelson.</p>
        <p>It supports generating help content in multiple formats, including HTML, Markdown, PDF,
            and website-ready formats, enabling developers to maintain and distribute comprehensive
            documentation efficiently.</p>
    </chapter_description>
      <keyword name="nelson help reference" link="./help_tools/1_nelson_help_reference.html" description="How to write help XML files for Nelson (elements, attributes, examples, tips)."></keyword>
      <keyword name="buildhelp" link="./help_tools/buildhelp.html" description="Build help of Nelson's modules."></keyword>
      <keyword name="buildhelpjson" link="./help_tools/buildhelpjson.html" description="Build help of Nelson JSON format."></keyword>
      <keyword name="buildhelpmd" link="./help_tools/buildhelpmd.html" description="Build help of Nelson's modules for GitBook."></keyword>
      <keyword name="buildhelpweb" link="./help_tools/buildhelpweb.html" description="Build help of Nelson's modules for website."></keyword>
      <keyword name="deployhelp" link="./help_tools/deployhelp.html" description="Install, uninstall and manage the local Nelson help system and module help files."></keyword>
      <keyword name="doc" link="./help_tools/doc.html" description="Displays documentation."></keyword>
      <keyword name="docroot" link="./help_tools/docroot.html" description="Retrieve or update the root directory for Nelson Help system."></keyword>
      <keyword name="headcomments" link="./help_tools/headcomments.html" description="Display Nelson function header comments."></keyword>
      <keyword name="help" link="./help_tools/help.html" description="Help for functions in Command Window."></keyword>
      <keyword name="htmltopdf" link="./help_tools/htmltopdf.html" description="Convers html page to pdf."></keyword>
      <keyword name="markdown" link="./help_tools/markdown.html" description="Converts markdown to html."></keyword>
      <keyword name="xmldocbuild" link="./help_tools/xmldocbuild.html" description="Internal function to convert xml document files to html."></keyword>
      <keyword name="xmldocchecker" link="./help_tools/xmldocchecker.html" description="Checks a xml documentation file."></keyword>
      <keyword name="xmldoctohelp" link="./help_tools/xmldoctohelp.html" description="Converts xml Nelson help files to Nelson format."></keyword>
      <keyword name="xmldoctohtml" link="./help_tools/xmldoctohtml.html" description="Converts xml Nelson help files to html."></keyword>
      <keyword name="xmldoctomd" link="./help_tools/xmldoctomd.html" description="Converts xml Nelson help files to markdown format."></keyword>
    </section>
  </toc>
</help_summary>
